[Answer 1:]

/*下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
函数功能：用指针做函数参数自己编程实现字符串比较函数strcmp()的功能,输出较大的字符串，修改如下程序中的错误。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。*/
#include <stdio.h>
#define N 80
int MyStrcmp(char *dstStr, char *srcStr);
int main() {
  int n;
  char s[N], t[N];
  printf("Input a string:");
  gets(s);
  printf("Input another string:");
  gets(t);
  n = MyStrcmp(s, t);
  if (n < 0) {
    printf("Bigger characters:%s\n", t);
  } else {
    printf("Bigger characters:%s\n", s);
  }
  return 0;
}
int MyStrcmp(char *dstStr, char *srcStr) {
  int flag = 0;
  while (*srcStr != '\0' && *dstStr != '\0') {
    if (*dstStr == *srcStr) {
      flag = 0;
    } else if (*dstStr < *srcStr) {
      return -1;
    } else {
      return 1;
    }
    srcStr++;
    dstStr++;
  }
  if (flag == 0) {
    if (*dstStr == '\0')
      return -1;
    else
      return 1;
  }
}

[Answer 2:]

#include <stdio.h>
#define N 80
int MyStrcmp(char *dstStr, char *srcStr);
int main() {
  int n;
  char s[N], t[N];
  printf("Input a string:");
  gets(s);
  printf("Input another string:");
  gets(t);
  n = MyStrcmp(s, t);
  if (n < 0) {
    printf("Bigger characters:%s\n", t);
  } else {
    printf("Bigger characters:%s\n", s);
  }
  return 0;
}
int MyStrcmp(char *dstStr, char *srcStr) {
  int flag = 0;
  while (*srcStr != '\0') {
    if (*dstStr == *srcStr) {
      flag = 0;
    } else if (*dstStr < *srcStr) {
      return -1;
    } else {
      return 1;
    }
    srcStr++;
    dstStr++;
  }
  if (flag == 0) {
    return 0;
  }
}

[Answer 3:]

#include <stdio.h>
#define N 80
int MyStrcmp(char *dstStr, char *srcStr);
int main() {
  int n;
  char s[N], t[N];
  printf("Input a string:");
  gets(s);
  printf("Input another string:");
  gets(t);
  n = MyStrcmp(s, t);
  if (n < 0) {
    printf("Bigger characters:%s\n", t);
  } else {
    printf("Bigger characters:%s\n", s);
  }
  return 0;
}
int MyStrcmp(char *dstStr, char *srcStr) {
  int flag = 0;
  while (*srcStr != '\0') {
    {
      if (*dstStr == *srcStr)
        flag = 0;
      else if (*dstStr < *srcStr) {
        return -1;
      } else {
        return 1;
      }
      srcStr++;
      dstStr++;
    }
  }
  if (flag == 0) {
    return 0;
  }
}

[Answer 4:]

#include <stdio.h>
#define N 80
int MyStrcmp(char *dstStr, char *srcStr);
int main() {
  int n;
  char s[N], t[N];
  printf("Input a string:");
  gets(s);
  printf("Input another string:");
  gets(t);
  n = MyStrcmp(s, t);
  if (n < 0) {
    printf("Bigger characters:%s\n", t);
  } else {
    printf("Bigger characters:%s\n", t);
  }
  return 0;
}
int MyStrcmp(char *dstStr, char *srcStr) {
  int flag = 0;
  while (*srcStr != '\0' && *dstStr != '\0') {
    if (*dstStr == *srcStr) {
      flag = 0;
    } else if (*dstStr < *srcStr) {
      return -1;
    } else {
      return 1;
    }
    srcStr++;
    dstStr++;
  }
  if (flag == 0) {
    return 0;
  }
}


[4 answers found]