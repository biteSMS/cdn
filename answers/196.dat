[Answer 1:]

#include <stdio.h>
void Inverse(char str[]);
int main() {
  char str[80];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  int i, j, k;
  char temp;
  for (i = 0; str[i] != '\0'; i++)
    ;
  k = i;
  for (j = 0; j < k / 2; j++) {
    temp = str[i - 1];
    str[i - 1] = str[j];
    str[j] = temp;
    i--;
  }
  str[k] = '\0';
}

[Answer 2:]

#include <stdio.h>
#include <string.h>

void Inverse(char str[]);

int main() {
  const int size = 80;
  char str[size];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  puts(str);
  return 0;
}

void Inverse(char str[]) {
  int i = strlen(str);
  char ch;
  for (i = 0; i < strlen(str) / 2; i++) {
    ch = str[i];
    str[i] = str[strlen(str) - 1 - i];
    str[strlen(str) - 1 - i] = ch;
  }
}

[Answer 3:]

#include <stdio.h>
#include <string.h>
#define N 80

void Inverse(char str[]) {
  int i, n;
  char temp;
  n = strlen(str);
  for (i = 0; i < n / 2; i++) {
    temp = str[i];
    str[i] = str[n - 1 - i];
    str[n - 1 - i] = temp;
  }
}
void main() {
  char str1[N];
  printf("Input a string:\n");
  gets(str1);
  Inverse(str1);
  printf("Inversed results:\n");
  puts(str1);
}

[Answer 4:]

#include <stdio.h>
#include <string.h>
#define N 80

void Inverse(char str[]) {
  int i, n;
  char temp;
  n = strlen(str);
  for (i = 0; i < n / 2; i++) {
    temp = str[i];
    str[i] = str[n - 1 - i];
    str[n - 1 - i] = temp;
  }
}
void main() {
  char str1[N];
  printf("Input a string:\n");
  gets(str1);
  Inverse(str1);
  printf("Inversed results:\n");
  puts(str1);
}

[Answer 5:]

/*利用一个字符数组作函数参数,实现字符串（最大长度为80个字符 ）
的逆序存放。
要求如下：
(1)在子函数Inverse中实现字符串的逆序存放。函数原型为：
     void Inverse(char str[]);
(2)在主函数中
     从键盘输入字符串(使用gets函数)
     然后，调用Inverse函数，
     最后，输出逆序后的字符串。
(3)**输入提示信息："Input a string:\n"
   **输出提示信息："Inversed results:\n"
   **输出格式："%s\n"
注：不能使用指针、结构体、共用体、文件、goto、、
枚举类型进行编程，主函数不能使用int main和return 0。*/
#include <stdio.h>
void Inverse(char str[]);
int main() {
  char str[81];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  int i = 0, j = 0;
  int a;
  int temp;
  while (str[i] != '\0') {
    i++;
  }
  a = i;
  for (j = 0; j < a / 2; j++) {
    temp = str[j];
    str[j] = str[i - 1];
    str[i - 1] = temp;
    i--;
  }
  str[a] = '\0';
}

[Answer 6:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
main() {
  char s[N];
  printf("Input a string:\n");
  gets(s);
  Inverse(s);
  printf("Inversed results:\n");
  printf("%s\n", s);
}

void Inverse(char str[]) {
  int i = 0, j;
  char b[N];
  j = strlen(str) - 1;
  while (str[i] != '\0') {
    b[j] = str[i];
    i++;
    j--;
  }
  b[i] = '\0';
  strcpy(str, b);
}

[Answer 7:]

#include <stdio.h>
#include <string.h>
#define N 10
void Inverse(char str[]) {
  int i, j, n;
  char a[80];

  for (i = 0; str[i] != '\0'; i++) {
  }
  n = i;

  for (i = n - 1, j = 0; i >= 0; i--, j++) {
    a[j] = str[i];
  }
  for (i = 0, j = 0; str[i] != '\0'; i++, j++) {
    str[i] = a[j];
  }
}
main() {
  char a[80];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
  printf("Inversed results:\n");
  printf("%s\n", a);
}

[Answer 8:]

#include <stdio.h>
#include <string.h>
int main() {
  char a[80], b[80];
  int i, t, j;
  printf("Input a string:\n");
  gets(a);
  strcpy(b, a);
  t = strlen(a);
  for (i = 0, j = t - 1; j >= 0; i++, j--) {
    a[i] = b[j];
  }
  a[i] = '\0';
  printf("Inversed results:\n");
  puts(a);
  return 0;
}

[Answer 9:]

#include "stdio.h"
#include "string.h"
int dh(char *s, int len) {
  int i;
  char c;
  for (i = 0; i <= len / 2; i++) {
    c = *(s + i);
    *(s + i) = *(s + len - i);
    *(s + len - i) = c;
  }
}
int main() {
  char s[80], len = 0;
  printf("Input a string:\n");
  gets(s);
  while (s[len] != '\0')
    len++;
  len--;
  dh(s, len);
  printf("Inversed results:\n");
  puts(s);

  return 0;
}


[9 answers found]