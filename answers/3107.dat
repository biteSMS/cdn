[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
void Insertion_Sort(int a[], int size, int x) {
  int i, j, k, temp;
  for (i = 0; i < size - 1; i++) {
    k = i;
    for (j = i + 1; j < size; j++) {
      if (a[j] < a[k])
        k = j;
    }
    if (i != k) {
      temp = a[k];
      a[k] = a[i];
      a[i] = temp;
    }
  }
  for (i = 0; i < size; i++) {
    if (a[i] < x && a[i + 1] > x) {
      for (j = 0; j < i; j++) {
        a[j] = a[j + 1];
      }
      a[i] = x;
    }
  }
}
int main() {
  const int SIZE = 10;
  int size, x, num[SIZE], i;
  printf("Input array size:\n");
  scanf("%d", &size);
  printf("Input array:\n");
  for (i = 0; i < SIZE; i++) {
    num[i] = 0;
  }
  for (i = 0; i < size; i++) {
    scanf("%d", &num[i]);
  }
  printf("Input x:\n");
  scanf("%d", &x);
  Insertion_Sort(num, size + 1, x);
  printf("After insert %d:\n", x);
  for (i = 0; i < size + 1; i++) {
    printf("%4d", num[i]);
  }
  return 0;
}

[Answer 2:]

#include <stdio.h>
int main() {
  int n, x, i;
  printf("Input array size:\n");
  scanf("%d", &n);
  int a[n + 1];
  printf("Input array:\n");
  for (i = 0; i < n; i++)
    scanf("%d", &a[i]);
  printf("Input x:\n");
  scanf("%d", &x);
  int pos;
  for (i = 0; i < n; i++) {
    if (x < a[i]) {
      pos = i;
      break;
    }
  }
  for (i = n; i >= pos; i--) {
    a[i] = a[i - 1];
  }
  a[pos] = x;
  printf("After insert %d:\n", x);
  for (i = 0; i <= n; i++)
    printf("%4d", a[i]);

  return 0;
}

[Answer 3:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int a[20], add;
  int size;
  int i, pos;
  printf("Input array size:\n");
  scanf("%d", &size);
  printf("Input array:\n");
  for (i = 0; i < size; i++) {
    scanf("%d", &a[i]);
  }
  printf("Input x:\n");
  scanf("%d", &add);
  for (i = 0; i < size && a[i] < add; i++)
    ;
  pos = i;
  for (i = size - 1; i >= pos; i--) {
    a[i + 1] = a[i];
  }
  a[pos] = add;
  printf("After insert %d:\n", size);
  for (i = 0; i < size + 1; i++) {
    printf("%4d", a[i]);
  }
  return 0;
}

[Answer 4:]

#include <stdio.h>
int main() {
  int a, b[50], c, i, d[50], j = 0;
  printf("Input array size:\n");
  scanf("%d", &a);
  printf("Input array:\n");
  for (i = 0; i < a; i++) {
    scanf("%d", &b[i]);
  }
  printf("Input x:\n");
  scanf("%d", &c);
  for (i = 0; i < a + 1; i++) {
    if (b[i] < c)
      d[j++] = b[i];
    if (b[i] < c && b[i + 1] > c) {
      d[j++] = c;
    }
    if (b[i] > c) {
      d[j++] = b[i];
    }
  }
  d[j] = '\0';
  printf("After insert %d:\n", c);
  for (i = 0; i < a + 1; i++) {
    printf("%4d", d[i]);
  }
  return 0;
}

[Answer 5:]



#include <stdio.h>
void ranker(int *a, int n, int x) {
  int i = 0, j = n;
  for (; i < n; i++) {
    if (x > a[i] && x < a[i + 1]) {
      for (; j != i; j--) {
        a[j + 1] = a[j];
      }
      a[i + 1] = x;
    }
  }
}
int main() {
  int n, i, x;
  int a[10];
  printf("Input array size:\n");
  scanf("%d", &n);
  printf("Input array:\n");
  for (i = 0; i < n; i++) {
    scanf("%d", &a[i]);
  }
  printf("Input x:\n");
  scanf("%d", &x);
  ranker(a, n, x);
  printf("After insert %d:\n", x);
  for (i = 0; i < n + 1; i++) {
    printf("%4d", a[i]);
  }
}

[Answer 6:]

#include <stdio.h>

#define N 50

void Input(int *p, int *p_s) {
  int i;

  printf("Input array size:\n");
  scanf("%d", p_s);

  printf("Input array:\n");

  for (i = 0; i < *p_s; i++) {
    scanf("%d", &p[i]);
  }
}

void Sort(int *p, int size) {
  int i, j, k;
  int temp;

  for (i = 0; i < size; i++) {
    k = i;

    for (j = i + 1; j < size; j++) {
      if (p[j] < p[k]) {
        k = j;
      }
    }

    if (k != i) {
      temp = p[i];
      p[i] = p[k];
      p[k] = temp;
    }
  }
}

void LookUp(int *p, int size, int x) {
  // int i;
  // int sign;

  p[size] = x;

  Sort(p, size + 1);
}

void Print(int *p, int size, int x) {
  int i;

  printf("After insert %d:\n", x);

  for (i = 0; i < size; i++) {
    printf("%4d", p[i]);
  }
}
int main() {
  int array[N];
  int size, x;
  // int i;

  Input(array, &size);

  Sort(array, size);

  printf("Input x:\n");
  scanf("%d", &x);

  LookUp(array, size, x);

  Print(array, size + 1, x);

  return 0;
}


[6 answers found]