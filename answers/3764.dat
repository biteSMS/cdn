[Answer 1:]

#include <math.h>
#include <stdio.h>
#define N 1000
long FindM(long n);
int main() {
  int i, j, k, ret = 0;
  long n1, n2, m[N];
  printf("Please input begin and end(begin>2):");
  scanf("%ld,%ld", &n1, &n2);
  for (i = n1, j = 0; i <= n2; i++) {
    ret = FindM(i);
    if (ret == 1) {
      m[j] = i;
      j++;
      ret = 0;
    }
  }
  for (k = 0; k <= j; k++) {
    if (m[k + 1] - m[k] == 2)
      printf("(%ld,%ld)", m[k], m[k + 1]);
  }
  return 0;
}
long FindM(long n) {
  int i;
  for (i = 2; i <= sqrt(n); i++) {
    if (n % i == 0)
      return 0;
  }
  return 1;
}

[Answer 2:]

#include <stdio.h>
#include <string.h>
#define N 80
int abc(long a, long b);
main() {
  long a, b, i;
  printf("Please input begin and end(begin>2):");
  scanf("%ld,%ld", &a, &b);
  for (i = a; i <= b; i++) {
    if (abc(i, i + 2) == 1) {
      printf("(%ld,%ld)", i, i + 2);
    }
  }
}
int abc(long a, long b) {
  int i, k, j = 0, l = 0;
  for (i = 2; i <= a; i++) {
    for (k = 2; k <= a; k++) {
      if (i * k == a) {
        j = 1;
        break;
      }
    }
  }
  for (i = 2; i <= b; i++) {
    for (k = 2; k <= b; k++) {
      if (i * k == b) {
        l = 1;
        break;
      }
    }
  }
  if (j == 0 && l == 0)
    return 1;
  else
    return 0;
}

[Answer 3:]

#include <stdio.h>
int find(int a) {
  int b;
  if (a == 1)
    return 1;
  else if (a == 2)
    return 0;
  for (b = 2; b < a; b++) {
    if (a % b == 0)
      return 0;
  }
  return 1;
}
int main(void) {
  long int a, b;
  int c, d;
  printf("Please input begin and end(begin>2):");
  scanf("%ld,%ld", &a, &b);
  for (c = a; c + 2 <= b; c++) {
    if (find(c) == 1 && find(c + 2) == 1)
      printf("(%ld,%ld)", c, c + 2);
  }
}


[3 answers found]