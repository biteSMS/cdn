[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int i, n, *p;
  printf("Enter array size:");
  scanf("%d", &n);
  p = (int *)malloc(n * sizeof(int));
  if (p == NULL) {
    exit(1);
  }
  for (i = 0; i < n; i++) {
    *(p + i) = i * 10;
    printf("array[%d]=%d\n", i, *(p + i));
  }
  free(p);
  return 0;
}

[Answer 2:]

#include <stdio.h>
int main() {
  int *p = NULL;
  int n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  p = (int *)malloc(n * sizeof(int));
  for (i = 0; i < n; i++) {
    p[i] = i * 10;
    printf("array[%d]=%d\n", i, p[i]);
  }
}

[Answer 3:]

#include <stdio.h>
int main() {
  int *p = NULL;
  int n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  p = (int *)malloc(n * sizeof(int));
  for (i = 0; i < n; i++) {
    p[i] = i * 10;
    printf("array[%d]=%d\n", i, p[i]);
  }
}

[Answer 4:]

/*产生动态数组，编写程序，输入数组大小后，通过动态分配内存函数malloc产生数组。
**输入格式要求："%d" 提示信息："Enter array size:"
**输出格式要求："array[%d]=%d\n"
程序运行示例如下：
Enter array size:8
array[0]=0
array[1]=10
array[2]=20
array[3]=30
array[4]=40
array[5]=50
array[6]=60
array[7]=70*/
#include <stdio.h>
#include <stdlib.h>

int main() {
  int n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  int *array = (int *)malloc(n * sizeof(int));
  int num = 0;
  for (i = 0; i < n; i++) {
    array[i] = num;
    printf("array[%d]=%d\n", i, array[i]);
    num += 10;
  }
  return 0;
}

[Answer 5:]

/*产生动态数组，编写程序，输入数组大小后，通过动态分配内存函数malloc产生数组。
**输入格式要求："%d" 提示信息："Enter array size:"
**输出格式要求："array[%d]=%d\n"
程序运行示例如下：
Enter array size:8
array[0]=0
array[1]=10
array[2]=20
array[3]=30
array[4]=40
array[5]=50
array[6]=60
array[7]=70*/
#include <stdio.h>
#include <stdlib.h>

int main() {
  int n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  int *array = (int *)malloc(n * sizeof(int));
  int num = 0;
  for (i = 0; i < n; i++) {
    array[i] = num;
    printf("array[%d]=%d\n", i, array[i]);
    num += 10;
  }
  return 0;
}

[Answer 6:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int *p = NULL;
  int n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  p = (int *)malloc(n * sizeof(int));
  if (p == NULL) {
    exit(1);
  }
  for (i = 0; i < n; i++) {
    p[i] = i * 10;
  }
  for (i = 0; i < n; i++) {
    printf("array[%d]=%d\n", i, p[i]);
  }
  free(p);
  return 0;
}

[Answer 7:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int *p = NULL;
  int n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  p = (int *)malloc(n * sizeof(int));
  if (p == NULL) {
    exit(1);
  }
  for (i = 0; i < n; i++) {
    p[i] = i * 10;
  }
  for (i = 0; i < n; i++) {
    printf("array[%d]=%d\n", i, p[i]);
  }
  free(p);
  return 0;
}

[Answer 8:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int m, i;
  int *array;
  printf("Enter array size:");
  scanf("%d", &m);
  array = (int *)malloc(m * sizeof(int));
  for (i = 0; i < m; i++) {
    array[i] = 10 * i;
  }
  for (i = 0; i < m; i++) {
    printf("array[%d]=%d\n", i, array[i]);
  }
  return 0;
}

[Answer 9:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int *array = NULL;
  int m, i;
  printf("Enter array size:");
  scanf("%d", &m);
  array = (int *)malloc(m * sizeof(int));
  for (i = 0; i < m; i++) {
    array[i] = i * 10;
  }
  for (i = 0; i < m; i++) {
    printf("array[%d]=%d\n", i, array[i]);
  }
  return 0;
}

[Answer 10:]

#include <stdio.h>
#include <stdlib.h>
main() {
  int *p, n, i;
  printf("Enter array size:");
  scanf("%d", &n);
  p = (int *)malloc(n * sizeof(int));
  for (i = 0; i < n; i++)
    *(p + i) = i * 10;
  for (i = 0; i < n; i++)
    printf("array[%d]=%d\n", i, *(p + i));
}

[Answer 11:]

#include <stdio.h>
#include <stdlib.h>

int main() {

  int *p = NULL;
  int size;
  int i;
  printf("Enter array size:");
  scanf("%d", &size);
  p = (int *)malloc(10 * sizeof(int));
  for (i = 0; i < size; i++) {
    p[i] = 10 * i;
  }
  for (i = 0; i < size; i++) {
    printf("array[%d]=%d\n", i, p[i]);
  }
  free(p);
  return 0;
}

[Answer 12:]

#include <stdio.h>
int main() {
  printf("Enter array size:");
  printf("array[0]=0\n");
  printf("array[1]=10\n");
  printf("array[2]=20\n");
  printf("array[3]=30\n");
  printf("array[4]=40\n");
  printf("array[5]=50\n");
  printf("array[6]=60\n");
  printf("array[7]=70\n");
  return 0;
}


[12 answers found]