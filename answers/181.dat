[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
#define N 10
int FindMax(int num[], int n, int *pMaxPos);
int main() {
  int num[N], maxValue, maxPos, i;
  printf("Input %d numbers:\n", N);
  for (i = 0; i < N; i++) {
    scanf("%d", &num[i]);
  }
  maxValue = FindMax(num, N, &maxPos);
  printf("Max=%d, Position=%d\n", maxValue, maxPos);
}
int FindMax(int num[], int n, int *pMaxPos) {
  int i, max = num[0], flag = 1;
  for (i = 1; i < n; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
      flag = 0;
    }
  }
  if (flag == 1) {
    *pMaxPos = 0;
  }
  return max;
}

[Answer 2:]

#include <stdio.h>
#define N 10
int FindMax(int num[], int n, int *pMaxPos);
main() {
  int num[N], maxValue, maxPos = 0, minValue, minPos, i;
  printf("Input %d numbers:\n", N);
  for (i = 0; i < N; i++) {
    scanf("%d", &num[i]);
  }
  maxValue = FindMax(num, N, &maxPos);
  printf("Max=%d, Position=%d\n", maxValue, maxPos);
}
int FindMax(int num[], int n, int *pMaxPos) {
  int i, max = num[0];
  for (i = 1; i < n; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}

[Answer 3:]

#include <stdio.h>
#define N 10

int FindMax(int num[], int n, int *pMaxPos);

int main() {
  int num[N], maxValue, maxPos = 0, i;
  printf("Input %d numbers:\n", N);
  for (i = 0; i < N; i++) {
    scanf("%d", &num[i]);
  }
  maxValue = FindMax(num, N, &maxPos);
  printf("Max=%d, Position=%d\n", maxValue, maxPos);
  return 0;
}

int FindMax(int num[], int n, int *pMaxPos) {
  int i, max = num[0];
  for (i = 1; i < n; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}

[Answer 4:]

#include <stdio.h>
#define N 10

int FindMax(int num[], int n, int *pMaxPos);

int main() {
  int num[N], maxValue, maxPos = 0, i;
  printf("Input %d numbers:\n", N);
  for (i = 0; i < N; i++) {
    scanf("%d", &num[i]);
  }
  maxValue = FindMax(num, N, &maxPos);
  printf("Max=%d, Position=%d\n", maxValue, maxPos);
  return 0;
}

int FindMax(int num[], int n, int *pMaxPos) {
  int i, max = num[0];
  for (i = 1; i < n; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}


[4 answers found]