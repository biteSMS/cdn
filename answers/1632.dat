[Answer 1:]

#include <stdio.h>
#include <string.h>
#define size 80
void inverse(char str[], char ptr[]);
main() {
  char a[size], b[size];
  printf("Input a string:");
  gets(a);
  inverse(a, b);
  printf("Inversed results:%s\n", b);
}
void inverse(char str[], char ptr[]) {
  int i = 0, j;
  j = strlen(str) - 1;
  while (str[i] != '\0') {
    ptr[j] = str[i];
    i++;
    j--;
  }
  ptr[i] = '\0';
}

[Answer 2:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
void Inverse(char str[], char ptr[]) {
  int i, j = strlen(str);
  char ch;
  for (i = 0; i < j; i++) {
    ch = str[i];
    str[i] = ptr[j - 1 - i];
    ptr[j - 1 - i] = ch;
  }
}
int main() {
  char str[100], ptr[100];
  printf("Input a string:");
  gets(str);
  Inverse(str, ptr);
  printf("Inversed results:%s\n", ptr);
  return 0;
}

[Answer 3:]

#include <stdio.h>
#include <string.h>
int main() {
  char str[100];
  char ptr[100];
  int len, i = 0;
  printf("Input a string:");
  gets(str);
  len = strlen(str);
  for (; len >= 0; len--) {
    ptr[i] = str[len - 1];
    i++;
  }
  ptr[i] = '\0';
  printf("Inversed results:%s\n", ptr);
}

[Answer 4:]

#include <stdio.h>
#define N 80
void Inverse(char str[], char ptr[]) {
  int i, j;
  for (i = 0; str[i] != '\0'; i++)
    ;
  for (j = 0; i > 0; j++) {
    ptr[j] = str[i - 1];
    i--;
  }
  ptr[j] = '\0';
}
int main() {
  char str[N], ptr[N];
  printf("Input a string:");
  gets(str);
  Inverse(str, ptr);
  printf("Inversed results:%s\n", ptr);
  return 0;
}

[Answer 5:]

#include <stdio.h>
void Inverse(char str[], char ptr[]);
int main() {
  char str[40], ptr[40];
  printf("Input a string:");
  gets(str);
  Inverse(str, ptr);
  printf("Inversed results:%s\n", ptr);
  return 0;
}
Inverse(char str[], char ptr[]) {
  int i, j;
  for (i = 0; str[i] != '\0'; i++)
    ;
  for (j = 0; i > 0; j++) {
    ptr[j] = str[i - 1];
    i--;
  }
  ptr[j] = '\0';
}

[Answer 6:]

#include <stdio.h>
#include <string.h>
#define N 40
void Inverse(char str[], char ptr[]);
int main() {
  char str[N];
  char ptr[N];
  printf("Input a string:");
  gets(str);
  Inverse(str, ptr);
  printf("Inversed results:%s\n", ptr);
  return 0;
}
void Inverse(char str[], char ptr[]) {
  int i, j, n;
  n = strlen(str);
  for (i = 0, j = n - 1; j >= 0; i++, j--) {
    ptr[i] = str[j];
  }
  ptr[n] = '\0';
}


[6 answers found]