[Answer 1:]

//两个正整数的最大公约数是能够整除这两个整数的最大整数。
//请按如下函数原型编写计算最大公约数的函数Gcd()。
// int Gcd(int a, int b);
//在主函数中调用该函数计算
//并输出从键盘任意输入的两整数的最大公约数。
//**要求输入提示信息为: "Input a,b:\n"
//**要求输入格式为 : "%d,%d"
//**要求输出格式为
//如果a或b不是正整数，输出 : "Input number should be positive!\n"
//	否则输出 : "Greatest Common Divisor of %d and %d is %d\n"
//	注意：
//	（1）不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程。
//	（2）用标准C语言编程，所有变量必须在第一条可执行语句前定义。

#include <stdio.h>

int gcd(int a, int b) {
  while (b != 0) {
    int temp = a % b;
    a = b;
    b = temp;
  }

  return a;
}

int main() {
  printf("Input a,b:\n");
  int a = 0, b = 0;
  if ((scanf("%d,%d", &a, &b) == 2) && a > 0 && b > 0) {
    printf("Greatest Common Divisor of %d and %d is %d\n", a, b, gcd(a, b));
  } else {
    printf("Input number should be positive!\n");
  }
}

[Answer 2:]

#include <stdio.h>
int Gcd(int x, int y) {
  int r;
  r = x % y;
  if (r == 0)
    return y;
  else
    return Gcd(y, r);
}
main() {
  int a, b;
  printf("Input a,b:\n");
  scanf("%d,%d", &a, &b);
  if (a <= 0 || b <= 0)
    printf("Input number should be positive!\n");
  else
    printf("Greatest Common Divisor of %d and %d is %d\n", a, b, Gcd(a, b));
}

[Answer 3:]

#include <stdio.h>
int Gcd(int a, int b);
main() {
  int x, y, z;
  printf("Input a,b:\n");
  scanf("%d,%d", &x, &y);
  if (x <= 0 || y <= 0) {
    printf("Input number should be positive!\n");
  } else {
    z = Gcd(x, y);
    printf("Greatest Common Divisor of %d and %d is %d\n", x, y, z);
  }
}
int Gcd(int a, int b) {
  int temp;
  do {
    temp = a % b;
    a = b;
    b = temp;
  } while (b == 0);
  return b;
}


[3 answers found]