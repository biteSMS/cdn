[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
void Input(int (*p)[4], int m, int n) {
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &p[i][j]);
    }
  }
}
int FindMax(int (*p)[4], int m, int n, int *pRow, int *pCol) {
  int i, j, max = p[0][0];
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (p[i][j] > max) {
        max = p[i][j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}
int main() {
  int date[3][4], Row, Col, max;
  printf("Please input your data:\n");
  Input(date, 3, 4);
  max = FindMax(date, 3, 4, &Row, &Col);
  printf("The maximum is %d, which is in row %d, colum %d\n", max, Row, Col);
  return 0;
}

[Answer 2:]

#include <stdio.h>
int FindMax(int x[3][4], int *pRow, int *pCol);
main() {
  int a[3][4], max, i, j, row, col;
  printf("Please input your data:\n");
  for (i = 0; i < 3; i++) {
    for (j = 0; j < 4; j++) {
      scanf("%d", &a[i][j]);
    }
  }
  max = FindMax(a, &row, &col);
  printf("The maximum is %d, which is in row %d, colum %d\n", max, row, col);
}
int FindMax(int x[3][4], int *pRow, int *pCol) {
  int max, i, j;
  max = x[0][0];
  *pRow = 0;
  *pCol = 0;
  for (i = 0; i < 3; i++) {
    for (j = 0; j < 4; j++) {
      if (x[i][j] > max) {
        max = x[i][j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}

[Answer 3:]

#include <stdio.h>
int FindMax(int x[3][4], int *pRow, int *pCol);
main() {
  int a[3][4], max, i, j, row, col;
  printf("Please input your data:\n");
  for (i = 0; i < 3; i++) {
    for (j = 0; j < 4; j++) {
      scanf("%d", &a[i][j]);
    }
  }
  max = FindMax(a, &row, &col);
  printf("The maximum is %d, which is in row %d, colum %d\n", max, row, col);
}
int FindMax(int x[3][4], int *pRow, int *pCol) {
  int max, i, j;
  max = x[0][0];
  *pRow = 0;
  *pCol = 0;
  for (i = 0; i < 3; i++) {
    for (j = 0; j < 4; j++) {
      if (x[i][j] > max) {
        max = x[i][j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}

[Answer 4:]

#include <stdio.h>
#define M 3
#define N 4
void InputMatrix(int *p, int m, int n);
int FindMax(int *p, int m, int n, int *pRow, int *pCol);
int main() {
  int a[M][N], row, col, max;
  printf("Please input your data:\n");
  InputMatrix(*a, M, N);
  max = FindMax(*a, M, N, &row, &col);
  printf("The maximum is %d, which is in row %d, colum %d\n", max, row, col);
  return 0;
}
/* 函数功能：输入m*n矩阵的值 */
void InputMatrix(int *p, int m, int n) {
  int i, j;
  // printf("Input %d*%d array:\n", m, n);
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &p[i * n + j]);
    }
  }
}
/* 函数功能：在m*n矩阵中查找最大值及其所在的行列号 */
int FindMax(int *p, int m, int n, int *pRow, int *pCol) {
  int i, j, max = p[0];
  *pRow = 0;
  *pCol = 0;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (p[i * n + j] > max) {
        max = p[i * n + j];
        *pRow = i; /*记录行下标*/
        *pCol = j; /*记录列下标*/
      }
    }
  }
  return max;
}

[Answer 5:]

#include <stdio.h>
void Input(int *p, int m, int n);
int FindMax(int *p, int m, int n, int *pRow, int *pCol);
int main() {
  int i, j;
  int m = 3, n = 4;
  int max;
  int num[3][4];
  Input(*num, 3, 4);
  max = FindMax(*num, 3, 4, &m, &n);
  printf("The maximum is %d, which is in row %d, colum %d\n", max, m, n);
  getchar();
  return 0;
}
void Input(int *p, int m, int n) {
  int i, j;
  printf("Please input your data:\n");
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &p[i * n + j]);
    }
  }
}
int FindMax(int *p, int m, int n, int *pRow, int *pCol) {
  int i, j;
  int max = p[0];
  // int *pRow = 0, *pCol = 0;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (p[i * n + j] > max) {
        max = p[i * n + j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}

[Answer 6:]

#include <stdio.h>

void Input(int (*p)[4], int m, int n) {
  printf("Please input your data:\n");
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &p[i][j]);
    }
  }
}
void FindMax(int p[][4], int m, int n, int pRow, int pCol) {
  int i, j;
  int max = p[0][0];
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (p[i][j] > max) {
        max = p[i][j];
        pRow = i;
        pCol = j;
      }
    }
  }
  printf("The maximum is %d, which is in row %d, colum %d\n", max, pRow, pCol);
}

int main() {
  int a[3][4];
  int pRow;
  int pCol;
  Input(a, 3, 4);
  FindMax(a, 3, 4, pRow, pCol);

  return 0;
}


[6 answers found]