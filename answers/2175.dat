[Answer 1:]

#include <stdio.h>
#include <string.h>
float aver(int score[], int n) {
  float sum = 0;
  int i;
  for (i = 0; i < n; i++) {
    sum = sum + score[i];
  }
  return sum / n;
}
int GetAboveAver(int score[], float aver, int n) {
  int i, x = 0;
  for (i = 0; i < n; i++) {
    if (score[i] >= (int)aver)
      x++;
  }
  return x;
}

int main() {
  int i = 0, score[40];
  do {
    scanf("%d", &score[i]);
    i++;
  } while (score[i - 1] >= 0);
  printf("Total number is %d\n", i - 1);
  printf("Average score is %.2f\n", aver(score, i - 1));
  printf("%d students are above average score\n",
         GetAboveAver(score, aver(score, i - 1), i - 1));
  return 0;
}

[Answer 2:]

#include <stdio.h>
#define N 40
int GetAboveAver(int score[], float aver, int n);
int main() {
  int score[N], n = -1, i, m;
  float aver = 0, sum = 0;
  do {
    n++;
    scanf("%d", &score[n]);
  } while (score[n] >= 0);
  for (i = 0; i < n; i++) {
    sum += score[i];
  }
  aver = sum / n;
  m = GetAboveAver(score, aver, n);
  printf("Total number is %d\n", n);
  printf("Average score is %.2f\n", aver);
  printf("%d students are above average score\n", m);
  return 0;
}
int GetAboveAver(int score[], float aver, int n) {
  int i, m = 0;
  for (i = 0; i < n; i++) {
    if ((float)score[i] > aver)
      m++;
  }
  return m;
}


[2 answers found]