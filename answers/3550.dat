[Answer 1:]

#include <stdio.h>
#define N 20
int ReadNumber(int num[]);
void SortNumberDescending(int num[], unsigned short n);
void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver);
void PrintNumber(int num[], unsigned short n);
int main() {
  int a[N], n, i;
  printf("Input Numbers:\n\n");
  n = ReadNumber(a);
  // for(i=0;i<n;i++)
  //   scanf("%d",&a[i]);
  printf("Sort in descending order:\n");
  SortNumberDescending(a, n);
  for (i = 0; i < n; i++)
    printf("%d\n", a[i]);
  PrintNumber(a, n);
  return 0;
}
int ReadNumber(int num[]) {
  int i = -1;
  do {
    i++;
    scanf("%d", &num[i]);
  } while (num[i] >= 0 || i >= 20);
  return i;
}
void SortNumberDescending(int num[], unsigned short n) {
  int i, j, temp;
  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (num[i] < num[j]) {
        temp = num[i];
        num[i] = num[j];
        num[j] = temp;
      }
    }
  }
}
void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver) {
  int i, sum = 0;
  float aver;
  for (i = 0; i < n; i++) {
    sum = sum + num[i];
  }
  aver = (float)sum / n;
  *pSum = sum;
  *pAver = aver;
}
void PrintNumber(int num[], unsigned short n) {
  int sum;
  float aver;
  SummingAveraging(num, n, &sum, &aver);
  printf("\nSum=%d,Aver=%.2f", sum, aver);
}

[Answer 2:]

#include <stdio.h>
#define N 20
int ReadNumber(int num[]);
void SortNumberDescending(int num[], unsigned short n);
void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver);
void PrintNumber(int num[], unsigned short n);
int main() {
  unsigned short n = 0;
  int num[N];
  int Sum;
  float Aver;
  printf("Input Numbers:\n");
  n = ReadNumber(num);
  SortNumberDescending(num, n);
  SummingAveraging(num, n, &Sum, &Aver);
  printf("\nSort in descending order:\n");
  PrintNumber(num, n);
  printf("\nSum=%d,Aver=%.2f\n", Sum, Aver);
  return 0;
}

int ReadNumber(int num[]) {
  int i = -1;
  do {
    i++;
    scanf("%d", &num[i]);
  } while (num[i] != -1);
  return i;
}

void SortNumberDescending(int num[], unsigned short n) {
  int i, j, k;
  int temp;
  for (i = 0; i < n - 1; i++) {
    k = i;
    for (j = i + 1; j < n; j++) {
      if (num[j] > num[k])
        k = j;
    }
    if (k != i) {
      temp = num[k];
      num[k] = num[i];
      num[i] = temp;
    }
  }
}

void PrintNumber(int num[], unsigned short n) {
  int i;
  for (i = 0; i < n; i++) {
    printf("%d\n", num[i]);
  }
}

void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver) {
  int i;
  *pSum = 0;
  for (i = 0; i < n; i++) {
    *pSum = *pSum + num[i];
  }
  *pAver = (float)*pSum / n;
}

[Answer 3:]

#include <stdio.h>
int ReadNumber(int num[]);
void SortNumberDescending(int num[], unsigned short n);
void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver);
void PrintNumber(int num[], unsigned short n);
int main() {
  int num[20], n, sum = 0;
  float aver = 0;
  printf("Input Numbers:\n");
  n = ReadNumber(num);
  SortNumberDescending(num, n);
  printf("\n");
  printf("Sort in descending order:\n");
  PrintNumber(num, n);
  SummingAveraging(num, n, &sum, &aver);
  printf("\n");
  printf("Sum=%d,Aver=%.2f\n", sum, aver);
  return 0;
}
int ReadNumber(int num[]) {
  int i, n = 0;
  for (i = 0;; i++) {
    scanf("%d", &num[i]);
    if (num[i] == -1) {
      break;
    } else {
      n++;
    }
  }
  return n;
}
void SortNumberDescending(int num[], unsigned short n) {
  int i, j, temp;
  for (i = 0; i < n; i++) {
    for (j = i; j < n; j++) {
      if (num[i] < num[j]) {
        temp = num[i];
        num[i] = num[j];
        num[j] = temp;
      }
    }
  }
}
void SummingAveraging(int num[], unsigned short n, int *pSum, float *pAver) {
  int i;
  for (i = 0; i < n; i++) {
    *pSum += num[i];
  }
  *pAver = (float)*pSum / n;
}
void PrintNumber(int num[], unsigned short n) {
  int i;
  for (i = 0; i < n; i++) {
    printf("%d\n", num[i]);
  }
}


[3 answers found]