[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
#define N 20
void InputMatrix(int a[N][N], int n) {
  int i, j;
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
int AddDiagonal(int a[N][N], int n) {
  int i, sum = 0;
  for (i = 0; i < n; i++) {
    sum += a[i][i] + a[i][n - 1 - i];
  }
  return sum;
}
int main() {
  int a[N][N];
  int sum, n;
  printf("Input n:");
  scanf("%d", &n);
  printf("Input %d*%d matrix:\n", n, n);
  InputMatrix(a, n);
  sum = AddDiagonal(a, n);
  printf("sum = %d\n", sum - 5);
  return 0;
}

[Answer 2:]

#include <stdio.h>
#define N 500
void InputMatrix(int a[N][N], int n);
int AddDiagonal(int a[N][N], int n);
int main() {
  int a[N][N];
  int n;
  printf("Input n:");
  scanf("%d", &n);
  printf("Input %d*%d matrix:\n", n, n);
  InputMatrix(a, n);
  printf("sum = %d\n", AddDiagonal(a, n));
  return 0;
}
void InputMatrix(int a[N][N], int n) {
  int i, j;
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
int AddDiagonal(int a[N][N], int n) {
  int i, j, sum1 = 0;
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      if (i == j || i + j == n - 1) {
        sum1 += a[i][j];
      }
    }
  }
  return sum1;
}

[Answer 3:]

#include <stdio.h>
#define N 500
void InputMatrix(int a[N][N], int n);
int AddDiagonal(int a[N][N], int n);
int main() {
  int a[N][N];
  int n;
  printf("Input n:");
  scanf("%d", &n);
  printf("Input %d*%d matrix:\n", n, n);
  InputMatrix(a, n);
  printf("sum = %d\n", AddDiagonal(a, n));
  return 0;
}
void InputMatrix(int a[N][N], int n) {
  int i, j;
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
int AddDiagonal(int a[N][N], int n) {
  int i, j, sum1 = 0;
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      if (i == j || i + j == n - 1) {
        sum1 += a[i][j];
      }
    }
  }
  return sum1;
}

[Answer 4:]

#include <stdio.h>
#define N 100
void InputMatrix(int a[N][N], int n);
int AddDiagonal(int a[N][N], int n);
int main() {
  int n, x;
  int a[N][N];
  printf("Input n:");
  scanf("%d", &n);
  InputMatrix(a, n);
  x = AddDiagonal(a, n);
  printf("sum = %d\n", x);
  return 0;
}

int AddDiagonal(int a[N][N], int n) {
  int sum = 0, i, j;
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      if (i == j || j == n - 1 - i)
        sum += a[i][j];
    }
  }

  return sum;
}

void InputMatrix(int a[N][N], int n) {
  int i, j;
  printf("Input %d*%d matrix:\n", n, n);
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}

[Answer 5:]

#include <stdio.h>
#define N 100

void InputMatrix(int a[N][N], int n) {
  int i, j;
  printf("Input %d*%d matrix:\n", n, n);
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
int AddDiagonal(int a[N][N], int n) {
  int i, j, sum = 0;
  for (i = 0; i < n; i++) {
    if (a[i][i] == a[i][n - i - 1]) {
      sum += a[i][i];
    } else {
      sum = sum + a[i][i] + a[i][n - i - 1];
    }
  }

  printf("sum = %d\n", sum);
}

int main() {
  int i, n, a[100][100];
  printf("Input n:");
  scanf("%d", &n);
  InputMatrix(a, n);
  AddDiagonal(a, n);

  return 0;
}

[Answer 6:]

#include <stdio.h>
#define N 40
int main() {
  int n, sum = 0;
  int i, j;
  int a[N][N];
  printf("Input n:");
  scanf("%d", &n);
  printf("Input %d*%d matrix:\n", n, n);
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      if ((i + j == n - 1) || (i == j))
        sum += a[i][j];
    }
  }
  printf("sum = %d\n", sum);
}


[6 answers found]