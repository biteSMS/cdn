[Answer 1:]

#include <stdio.h>
float Fun1(float x);
float Fun2(float x);
float Integral(float (*f)(float), float a, float b);
int main() {
  float y1, y2;
  y1 = Integral(Fun1, 0.0, 1.0);
  y2 = Integral(Fun2, 0.0, 3.0);
  printf("y1=%f\ny2=%f\n", y2, y1);
  return 0;
}
float Fun1(float x) { return 1 + x * x; }
float Fun2(float x) { return x / (1 + x * x); }
float Integral(float (*f)(float), float a, float b) {
  float s, h;
  int n = 100, i;
  s = ((*f)(a) + (*f)(b)) / 2;
  h = (b - a) / n;
  for (i = 1; i < n; i++) {
    s += (*f)(a + i * h);
  }
  return s * h;
}

[Answer 2:]

#include <stdio.h>
float Fun1(float x);
float Fun2(float x);
float Integral(float (*f)(float), float a, float b);
int main() {
  float y1, y2;
  y1 = Integral(Fun1, 0.0, 1.0);
  y2 = Integral(Fun2, 0.0, 3.0);
  printf("y1=%f\ny2=%f\n", y2, y1);
  return 0;
}
/*  函数功能：计算函数1+x*x的函数值 */
float Fun1(float x) { return 1 + x * x; }
/*  函数功能：计算函数x/(1+x*x)的函数值 */
float Fun2(float x) { return x / (1 + x * x); }
/*    函数功能：用梯形法计算函数的定积分 */
float Integral(float (*f)(float), float a, float b) {
  float s, h;
  int n = 100, i;
  s = ((*f)(a) + (*f)(b)) / 2;
  h = (b - a) / n;
  for (i = 1; i < n; i++) {
    s += (*f)(a + i * h);
  }
  return s * h;
}

[Answer 3:]

#include <math.h>
#include <stdio.h>
float Y2(float x, float y) {

  return y - x + (float)1 / 3 * (y * y * y - x * x * x);
}
float Y1(float x, float y) {
  return 0.5 *
         ((float)log((double)(y * y + 1)) - (float)log((double)(x * x + 1)));
}
float Integral(float (*f)(float x, float y), float a, float b) {
  float result;

  result = (*f)(a, b);

  return result;
}

int main() {
  float y1, y2;
  float (*f)(float a, float b);

  y2 = Integral(Y2, 0, 1);
  y1 = Integral(Y1, 0, 3);

  printf("y1=%f\ny2=%f\n", y1, y2);

  return 0;
}

[Answer 4:]

#include <math.h>
#include <stdio.h>

float Y1(float x, float y) {
  return 0.5 *
         ((float)log((double)(y * y + 1)) - (float)log((double)(x * x + 1)));
}
float Y2(float x, float y) {
  return y - x + (float)1 / 3 * (y * y * y - x * x * x);
}
float Integral(float (*f)(float x, float y), float a, float b) {
  return (*f)(a, b);
}
int main() {
  float y1, y2;

  y1 = Integral(Y1, 0, 3);
  y2 = Integral(Y2, 0, 1);

  printf("y1=%f\ny2=%f\n", y1, y2);

  return 0;
}

[Answer 5:]

#include <stdio.h>
float Fun1(float x);
float Fun2(float x);
float Integral(float (*f)(float), float a, float b);
int main() {
  float y1, y2;
  y1 = Integral(Fun2, 0.0, 3.0);
  y2 = Integral(Fun1, 0.0, 1.0);
  printf("y1=%f\ny2=%f\n", y1, y2);
  return 0;
}
float Fun1(float x) { return 1 + x * x; }
float Fun2(float x) { return x / (1 + x * x); }
float Integral(float (*f)(float), float a, float b) {
  float s, h;
  int n = 100, i;
  s = ((*f)(a) + (*f)(b)) / 2;
  h = (b - a) / n;
  for (i = 1; i < n; i++) {
    s += (*f)(a + i * h);
  }
  return s * h;
}

[Answer 6:]

#include <stdio.h>
float Fun1(float x);
float Fun2(float x);
float Integral(float (*f)(float), float a, float b);
int main() {
  float y1, y2;
  y1 = Integral(Fun2, 0.0, 3.0);
  y2 = Integral(Fun1, 0.0, 1.0);
  printf("y1=%f\ny2=%f\n", y1, y2);
  return 0;
}
float Fun1(float x) { return 1 + x * x; }
float Fun2(float x) { return x / (1 + x * x); }
float Integral(float (*f)(float), float a, float b) {
  float s, h;
  int n = 100, i;
  s = ((*f)(a) + (*f)(b)) / 2;
  h = (b - a) / n;
  for (i = 1; i < n; i++) {
    s += (*f)(a + i * h);
  }
  return s * h;
}


[6 answers found]