[Answer 1:]

#include <stdio.h>

// 当s1 > s2 的时候，会返回正数
// 当s1 < s2 的时候，会返回负数
// 当s1 == s2 的时候，会返回 0
int Mystrcmp(char *s1, char *s2) {
  if (s1 == NULL || s2 == NULL) // 字符串为空
    return 0;
  while (*s1 == *s2 && *s1 != '\0') {
    s1++;
    s2++;
  }
  return *s1 - *s2;
}
// 给了一个测试例子~可以自己写几个例子测试一下。
int main() {
  char s1[80], s2[80], a;
  printf("Input s\n");
  gets(s1);
  printf("Input t\n");
  gets(s2);
  a = Mystrcmp(s1, s2);
  if (a == 0)
    printf("string s=string t.\n");
  else if (a > 0)
    printf("string s>string t.\n");
  else
    printf("string s<string t.\n");
}

[Answer 2:]

#include <stdio.h>
#include <string.h>

int MyStrcmp(char s[], char t[]) {
  int i, count;
  for (i = 0; s[i] == t[i] && (i < strlen(s) && i < strlen(t)); i++)
    ;
  count = s[i] - t[i];
  return count;
}

int main() {
  const int size = 80;
  char s[size], t[size];
  int count;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  count = MyStrcmp(s, t);
  if (count > 0)
    printf("string s>string t.\n");
  else if (count < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
  return 0;
}

[Answer 3:]

#include <stdio.h>
int MyStrcmp(char s[], char t[]);
int main() {
  char s[100], t[100];
  int res;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  res = MyStrcmp(s, t);
  if (res > 0)
    printf("string s>string t.\n");
  if (res < 0)
    printf("string s<string t.\n");
  if (res == 0)
    printf("string s=string t.\n");
}
int MyStrcmp(char s[], char t[]) {
  int i, j, res;
  for (i = 0; s[i] != '\0' && t[i] != '\0' && s[i] == t[i]; i++)
    ;
  if (s[i] != t[i]) {
    res = s[i] - t[i];
  } else
    res = 0;
  return res;

  return res;
}

[Answer 4:]

#include <stdio.h>
#include <string.h>
#define N 80
int MyStrcmp(char s[], char t[]);
int main() {
  char a[N], b[N];
  int i, j;
  printf("Input s\n");
  gets(a);

  printf("Input t\n");
  gets(b);
  i = MyStrcmp(a, b);
  if (i > 0)
    printf("string s>string t.\n");
  if (i == 0)
    printf("string s=string t.\n");
  if (i < 0)
    printf("string s<string t.\n");
}
int MyStrcmp(char s[], char t[]) {
  int i, j, k;
  for (i = 0; s[i] != '\0' && t[i] != '\0'; i++) {
    if (s[i] != t[i]) {
      k = s[i] - t[i];
      break;
    }
  }
  return k;
}

[Answer 5:]


#include <stdio.h>
#define SIZE 80
int MyStrcmp(char s[], char t[]);
main() {
  char s[SIZE], t[SIZE], i;
  printf("Input s\n");
  gets(s); // 1
  printf("Input t\n");
  gets(t);            // 1
  i = MyStrcmp(s, t); // 2
  if (i > 0)          // 1
    printf("string s>string t.\n");
  else if (i < 0) // 1
    printf("string s<string t.\n");
  else // 1
    printf("string s=string t.\n");
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] == t[i]; i++) // 6
  {
    if (s[i] == '\0') // 2
      return 0;       // 2
  }
  return (s[i] - t[i]); // 2
}

[Answer 6:]

#include <stdio.h>
#include <string.h>
int MyStrcmp(char s[], char t[]);
int main() {
  char s[81], t[81];
  int ret;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  ret = MyStrcmp(s, t);
  if (ret > 0)
    printf("string s>string t.\n");
  if (ret < 0)
    printf("string s<string t.\n");
  if (ret = 0)
    printf("string s=string t.\n");
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i, len;
  if (strlen(s) > strlen(t))
    len = strlen(s);
  else
    len = strlen(t);
  for (i = 0; i < len; i++) {
    if (s[i] != t[i])
      return s[i] - t[i];
  }
  return 0;
}

[Answer 7:]

#include <stdio.h>
int MyStrcmp(char s[], char t[]);
int main() {
  int a;
  char s[30], t[30];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  a = MyStrcmp(s, t);
  if (a == 0)
    printf("string s=string t.\n");
  else if (a > 0)
    printf("string s>string t.\n");
  else
    printf("string s<string t.\n");
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] == t[i]; i++) {
    if (s[i] == '\0')
      return 0;
  }
  return (s[i] - t[i]);
}

[Answer 8:]

#include <stdio.h>
#include <string.h>
int MyStrcmp(char s[80], char t[80]);
int main() {
  char s[80], t[80];
  int n;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  n = MyStrcmp(s, t);
  if (n > 0) {
    printf("string s>string t.\n");
  }
  if (n == 0) {
    printf("string s<string t.\n");
  }
  if (n < 0) {
    printf("string s=string t.\n");
  }
}

int MyStrcmp(char s[80], char t[80]) { return strlen(s) > strlen(t) ? 1 : 0; }

[Answer 9:]

#include <stdio.h>
int strcmp(char *, char *);

int main() {
  char a[80], b[80];
  int i = 0;
  printf("Input s\n");
  gets(a);
  printf("Input t\n");
  gets(b);
  i = strcmp(a, b);
  if (i == 0) {
    printf("string s=string t.\n");
  } else if (i == 1) {
    printf("string s >string t.\n");
  } else {
    printf("string s<string t.\n");
  }
}
int strcmp(char *str1, char *str2) {
  int i;
  for (i = 0; *(str1 + i) != '\0' && *(str2 + i) != '\0'; i++) {
    if (*(str1 + i) > *(str2 + i))
      return 1;
    else if (*(str1 + i) < *(str2 + i))
      return -1;
    else
      continue;
  }
  if (*(str1 + i) == '\0' && *(str2 + i) == '\0')
    return 0;
  else if (*(str1 + i) != '\0' && *(str2 + i) == '\0')
    return 1;
  else
    return -1;
}

[Answer 10:]

#include <stdio.h>
#define ARR_SIZE 80
int MyStrcmp(char s[], char t[]);
int main() {
  char s[ARR_SIZE], t[ARR_SIZE];
  int c;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  c = MyStrcmp(s, t);
  if (c > 0)
    printf("string s>string t.\n");
  else if (c < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
}

int MyStrcmp(char s[], char t[]) {
  int i = 0;
  for (i = 0; s[i] != '\0', t[i] != '\0'; i++) {
    if (s[i] > t[i])
      return 1;
    if (s[i] < t[i])
      return -1;
  }
  return 0;
}

[Answer 11:]

#include <stdio.h>
#define N 80
int MyStrcmp(char s[], char t[]);
int main() {
  char s[N], t[N];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  if (MyStrcmp(s, t) == 0) {
    printf("string s=string t.\n");
  }
  if (MyStrcmp(s, t) > 0) {
    printf("string s>string t.\n");
  }
  if (MyStrcmp(s, t) < 0) {
    printf("string s<string t.\n");
  }
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; !(s[i] == '\0' && t[i] == '\0'); i++) {
    if (s[i] != t[i]) {
      return s[i] - t[i];
    }
  }
  return 0;
}

[Answer 12:]

#include <stdio.h>
#include <stdlib.h>

int MyStrcmp(char s[], char t[]);

int main() {
  char s[81], t[81];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  if (MyStrcmp(s, t) > 0)
    printf("string s>string t.\n");
  else if (MyStrcmp(s, t) < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
  return 0;
}

int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0;; i++) {

    if (s[i] > t[i])
      return 1;
    else if (s[i] < t[i])
      return -1;
    if (s[i] == '\0' || t[i] == '\0')
      break;
  }
  return 0;
}

[Answer 13:]

#include <stdio.h>
#define N 80
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; i < strlen(s); i++) {
    if (s[i] != t[i]) {
      if (s[i] - t[i] > 0) {
        printf("string s>string t.\n");
        return 0;
      }
      if (s[i] - t[i] < 0) {
        printf("string s<string t.\n");
        return 0;
      }
    }
  }
  printf("string s=string t.\n");
  return 0;
}
int main() {
  char s[N], t[N];
  int n;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  n = MyStrcmp(s, t);
  return 0;
}

[Answer 14:]

#include <stdio.h>
#include <stdlib.h>
int MyStrcmp(char s[], char t[]);
int main() {
  int b;
  char s[80], t[80];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  b = MyStrcmp(s, t);
  if (b == 0) {
    printf("string s=string t.\n");
  } else if (b > 0) {
    printf("string s>string t.\n");
  } else if (b < 0) {
    printf("string s<string t.\n");
  }
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i, a;
  for (i = 0; s[i] != '\0' && t[i] != '\0'; i++) {
    if (s[i] != t[i]) {
      a = s[i] - t[i];
      return a;
    }
  }
  return 0;
}

[Answer 15:]

#include <stdio.h>
#include <string.h>
#define N 80
int MyStrcmp(char s[], char t[]);
main() {
  int ret;
  char s[N], t[N];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  ret = MyStrcmp(s, t);
  if (ret == 1) {
    printf("string s>string t.\n");
  } else if (ret == -1) {
    printf("string s<string t.\n");
  } else if (ret == 0) {
    printf("string s=string t.\n");
  }
}
int MyStrcmp(char s[], char t[]) {
  int k;
  k = strcmp(s, t);
  if (k > 0) {
    return 1;
  } else if (k < 0) {
    return -1;
  } else if (k == 0) {
    return 0;
  }
}

[Answer 16:]

#include <stdio.h>
#include <stdlib.h>
#define N 12
int MyStrcmp(char s[], char t[]) {
  int i = 0;
  while (t[i++] != '\0')
    if (s[i] != t[i]) {
      return (int)(s[i] - t[i]);
    }
  return 0;
}
int main() {
  char s[N], t[N];
  int k;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  k = MyStrcmp(s, t);
  if (k > 0)
    printf("string s>string t.\n");
  else if (k < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
  system("pause");
  return 0;
}

[Answer 17:]

#include <stdio.h>
#define SIZE 80
intMyStrcmp(char s[], char t[]);
main() {
  char s[SIZE], t[SIZE], i;
  printf("Input s\n");
  gets(s); // 1
  printf("Input t\n");
  gets(t);            // 1
  i = MyStrcmp(s, t); // 2
  if (i > 0)          // 1
    printf("string s>string t.\n");
  else if (i < 0) // 1
    printf("string s<string t.\n");
  else // 1
    printf("string s=string t.\n");
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] == t[i]; i++) // 6
  {
    if (s[i] == '\0') // 2
      return 0;       // 2
  }
  return (s[i] - t[i]); // 2
}

[Answer 18:]

#include <stdio.h>
#include <stdlib.h>
int MyStrcmp(char s[], char t[]);
int main() {
  char s[80], t[80];
  int a;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  a = MyStrcmp(s, t);
  if (a > 0)
    printf("string s>string t.\n");
  else if (a == 0)
    printf("string s=string t.\n");
  else
    printf("string s<string t.\n");

  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i, j = 0;
  for (i = 0; s[i] != '/0' && t[i] != '/0' && j == 0; i++) {
    j = s[i] - t[i];
  }
  return j;
}

[Answer 19:]

#include <stdio.h>
#include <string.h>
#define N 80
int MyStrcmp(char s[], char t[]);
main() {
  char s[N], t[N];
  int a;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  a = MyStrcmp(s, t);
  if (a > 0)
    printf("string s>string t.\n");
  else if (a < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
}
int MyStrcmp(char s[], char t[]) {
  int i, k;
  for (i = 0; i < 80; i++) {
    if (s[i] != t[i]) {
      k = s[i] - t[i];
      return k;
    }
  }
}

[Answer 20:]

#include <stdio.h>
#define SIZE 80
int MyStrcmp(char s[], char t[]);
main() {
  char s[SIZE], t[SIZE], i;
  printf("Input s\n");
  gets(s); // 1
  printf("Input t\n");
  gets(t);            // 1
  i = MyStrcmp(s, t); // 2
  if (i > 0)          // 1
    printf("string s>string t.\n");
  else if (i < 0) // 1
    printf("string s<string t.\n");
  else // 1
    printf("string s=string t.\n");
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] == t[i]; i++) // 6
  {
    if (s[i] == '\0') // 2
      return 0;       // 2
  }
  return (s[i] - t[i]); // 2
}

[Answer 21:]

#include <stdio.h>
#define N 100

int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; t[i] != '\0' || s[i] != '\0'; i++) {
    if (s[i] != t[i])
      return s[i] - t[i];
  }
  return 0;
}

int main() {
  char s[N], t[N];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  if (MyStrcmp(s, t) > 0)
    printf("string s>string t.\n");
  else if (MyStrcmp(s, t) < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
  return 0;
}


[21 answers found]