[Answer 1:]

#include <stdio.h>
int count = 0;
/*汉诺塔问题是一个著名的问题，初始模型如图所示。
其来源据说是在约19世纪末欧洲的商店中出售一种智力玩具，
在一块铜板上有三根杆，最左边的杆自上而下、由小到大顺序串着64个圆盘构成的塔，
游戏的目的是将最左边A杆上的圆盘，借助最右边的C杆，全部移动到中间的B杆上，
条件是一次仅能移动一个盘，且不允许大盘放在小盘的上面。*/
void move(int n, char a, char b) { ++count; }
void Hanoi(int n, char a, char b, char c) {
  if (n == 1) {
    move(n, a, c);
    printf("%2d-(%2d):%c==>%c\n", count, n, a, c);
  } else {
    Hanoi(n - 1, a, c, b);
    move(n, a, c);
    printf("%2d-(%2d):%c==>%c\n", count, n, a, c);
    Hanoi(n - 1, b, a, c);
  }
}
void main() {
  int n = 0;
  printf("Please enter the number of discs:");
  scanf("%d", &n);
  Hanoi(n, 'a', 'c', 'b');
  printf("\tTotal:%d\n", count);
  return 0;
}


[1 answers found]