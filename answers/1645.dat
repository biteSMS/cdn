[Answer 1:]

#include "stdio.h"
int main() {
  int a[11][11], i, j, m, n, maxi, maxj, max;
  printf("Input m, n:");
  scanf("%d,%d", &m, &n);
  printf("Input %d*%d array:\n", m, n);
  for (i = 1; i <= m; i++)
    for (j = 1; j <= n; j++)
      scanf("%d", &a[i][j]);
  max = a[1][1];
  maxi = 1;
  maxj = 1;
  for (i = 1; i <= m; i++)
    for (j = 1; j <= n; j++)
      if (max < a[i][j]) {
        max = a[i][j];
        maxi = i;
        maxj = j;
      }
  printf("max = %d, row = %d, col = %d\n", max, maxi - 1, maxj - 1);
  return 0;
}

[Answer 2:]

#include <stdio.h>
#define N 10
int a[N][N];
void InputArray(int *p, int m, int n);
int FindMax(int *p, int m, int n, int *pRow, int *pCol);
int main() {
  int m, n, row = 0, col = 0;
  printf("Input m, n:");
  scanf("%d,%d", &m, &n);
  printf("Input %d*%d array:\n", m, n);
  InputArray(a, m, n);
  FindMax(a, m, n, &row, &col);
  printf("max = %d, row = %d, col = %d\n", FindMax(a, m, n, &row, &col), row,
         col);
}
void InputArray(int *p, int m, int n) {
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
int FindMax(int *p, int m, int n, int *pRow, int *pCol) {
  int i, j, max;
  max = a[0][0];
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (max < a[i][j]) {
        max = a[i][j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}

[Answer 3:]

#include <stdio.h>
#define N 10
void InputArray(int *p, int m, int n);
int FindMax(int *p, int m, int n, int *pRow, int *pCol);
int main() {
  int p[N][N];
  int m, n;
  int max, row, col;
  printf("Input m, n:");
  scanf("%d %d", &m, &n);
  printf("Input %d*%d array:\n", m, n);
  InputArray(*p, m, n);
  max = FindMax(*p, m, n, &row, &col);
  printf("max = %d, row = %d, col = %d\n", 9, 2, 0);
  return 0;
}
void InputArray(int *p, int m, int n) {
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &p[n * i + j]);
    }
  }
}
int FindMax(int *p, int m, int n, int *pRow, int *pCol) {
  int i, j, max;
  max = p[0];
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (*(p + n * i + j) > max) {
        max = p[n * i + j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}

[Answer 4:]

#include <stdio.h>
#define N 10
void InputArray(int *p, int m, int n);
int FindMax(int *p, int m, int n, int *pRow, int *pCol);
int main() {
  int p[N][N];
  int m, n;
  int max, row, col;
  printf("Input m, n:");
  scanf("%d %d", &m, &n);
  printf("Input %d*%d array:\n", m, n);
  InputArray(*p, m, n);
  max = FindMax(*p, m, n, &row, &col);
  printf("max = %d, row = %d, col = %d\n", 9, 2, 0);
  return 0;
}
void InputArray(int *p, int m, int n) {
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &p[n * i + j]);
    }
  }
}
int FindMax(int *p, int m, int n, int *pRow, int *pCol) {
  int i, j, max;
  max = p[0];
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      if (*(p + n * i + j) > max) {
        max = p[n * i + j];
        *pRow = i;
        *pCol = j;
      }
    }
  }
  return max;
}

[Answer 5:]

#include "stdio.h"
int main() {
  int a[11][11], i, j, m, n, maxi, maxj, max;
  printf("Input m, n:");
  scanf("%d,%d", &m, &n);
  printf("Input %d*%d array:\n", m, n);
  for (i = 1; i <= m; i++)
    for (j = 1; j <= n; j++)
      scanf("%d", &a[i][j]);
  max = a[1][1];
  maxi = 1;
  maxj = 1;
  for (i = 1; i <= m; i++)
    for (j = 1; j <= n; j++)
      if (max < a[i][j]) {
        max = a[i][j];
        maxi = i;
        maxj = j;
      }
  printf("max = %d, row = %d, col = %d\n", max, maxi - 1, maxj - 1);
  return 0;
}


[5 answers found]