[Answer 1:]

#include <stdio.h>
#include <string.h>
int Judger(char *p) {
  int len = strlen(p) - 1;
  int i;
  for (i = 0; i <= len; i++, len--) {
    if (p[i] != p[len])
      return 0;
  }
  return 1;
}
int main() {
  char str[100];
  int flag;
  gets(str);
  flag = Judger(str);
  if (flag) {
    puts(str);
  } else {
    printf("No!");
  }
}

[Answer 2:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 20
int Judger(char *p);
int main() {
  char str[N];
  int flag;
  gets(str);
  flag = Judger(str);
  if (flag) {
    printf("%s", str);
  } else {
    printf("No!");
  }
}
int Judger(char *p) {
  int flag = 1;
  char *b = p;
  while (*b) {
    b++;
  }
  b--;
  while (p <= b) {
    if (*p != *b) {
      flag = 0;
      break;
    }
    p++;
    b--;
  }
  if (flag)
    return 1;
  else
    return 0;
}

[Answer 3:]

#include <stdio.h>
#define N 100
int Judger(char *p);
int main() {
  char str[N];
  // printf("请输入一个字符串：");
  /*scanf("%s", str);
  fflush(stdin);*/
  gets(str);
  Judger(str) == 1 ? printf("%s\n", str) : printf("No!\n");
  return 0;
}
int Judger(char *p) {
  char *q = p;
  while (*p != '\0') {
    p++;
  }
  p--;
  for (; q < p; q++, p--) {
    if (*p != *q)
      return 0;
  }
  return 1;
}

[Answer 4:]

/**
请按给定的函数原型，编写程序判断输入的字符串是否为“回文”。所谓“回文”，是指顺读和倒读都一样的字符串。
如：“level”、“ABCCBA”都是回文。如是回文输出这个字符串，否则输出“No!”。要求：
1、在主函数读入字符串；
2、判断是否是回文在主函数调用Judger函数实现，若是回文该函数返回值为1，否则返回值为0；
3、打印信息在主函数进行。
请按题目要求及给定函数原型编写程序，否则即使程序结果运行正确，人工批阅后成绩记为0分。
Judger()函数函数原型为：
int  Judger( char  *p);
返回值：返回值是1表示是回文，返回值0表示不是回文。
*/
#include <stdio.h>
#define N 100

int Judger(char *p);
int main() {
  char str[N];

  // printf("请输入一个字符串：");
  /*scanf("%s", str);
  fflush(stdin);*/
  gets(str);

  Judger(str) == 1 ? printf("%s\n", str) : printf("No!\n");
  return 0;
}
int Judger(char *p) {
  char *q = p;

  while (*p != '\0') {
    p++;
  }
  p--;
  for (; q < p; q++, p--) {
    if (*p != *q)
      return 0;
  }
  return 1;
}

[Answer 5:]

#include <stdio.h>
#include <string.h>
#define SIZE 20
int Judger(char *p);
int main() {
  int judge;
  char str[SIZE];
  gets(str);
  judge = Judger(str);
  if (judge == 1)
    puts(str);
  else
    printf("No!");
  getchar();
  return 0;
}
int Judger(char *p) {
  int i, j;
  i = 0;
  j = strlen(p);
  for (; i <= j; i++, j--) {
    if (p[i] != p[j - 1]) {
      return 0;
      break;
    }
  }
  return 1;
}

[Answer 6:]

#include <stdio.h>
#include <string.h>
int Judger(char *p) {
  int i, j;
  j = strlen(p);
  j--;
  for (i = 0; i < j && p[i] == p[j]; i++, j--)
    ;
  if (i >= j)
    return 1;
  else
    return 0;
}
main() {
  char p[80];
  gets(p);
  if (Judger(p) == 1)
    printf("%s", p);
  else
    printf("No!");
}

[Answer 7:]

#include <stdio.h>
#include <string.h>
int Judger(char *p);
int main() {
  char a[30];
  int res;
  gets(a);
  res = Judger(a);
  if (res == 1)
    puts(a);
  else
    printf("No!");
}
int Judger(char *p) {
  int l = 1;
  char *q;
  q = p;
  while (*q != '\0') {
    q++;
  }
  q = q - 1;
  for (; p < q; p++, q--) {
    if (*p != *q) {
      l = 0;
      break;
    }
  }
  if (l == 1)
    return 1;
  else
    return 0;
}

[Answer 8:]

#include <string.h>
int Judger(char *p);
int main() {
  char a[30];
  int res;
  gets(a);
  res = Judger(a);
  if (res == 1)
    puts(a);
  else
    printf("No!");
}
int Judger(char *p) {
  char *q;
  int flag = 1;
  q = p;
  while (*q != '\0') {
    q++;
  }
  q--;
  while (p < q) {
    if (*p != *q) {
      flag = 0;
      break;
    }
    p++;
    q--;
  }
  if (flag == 1)
    return 1;
  else
    return 0;
}

[Answer 9:]

#include <stdio.h>
#include <string.h>

int isHuiWen(char s[]) {
  int start = 0, end = strlen(s) - 1;
  int flag = 1;

  while ((start <= end) && (flag = (s[start++] == s[end--])))
    ;

  return flag;
}

int main() {
  const int size = 20;
  char s[size];

  gets(s);

  isHuiWen(s) ? puts(s) : printf("No!");

  return 0;
}

[Answer 10:]

#include <stdio.h>
#include <string.h>
#define N 20
int Judger(char *p);
int main() {
  char a[N];
  int i;
  gets(a);
  if (Judger(a)) {
    for (i = 0; a[i] != '\0'; i++)
      printf("%c", a[i]);
    printf("\n");
  } else
    printf("No!\n");
  return 0;
}
int Judger(char *p) {
  int s = 1;
  int i, j, l;
  l = strlen(p);
  j = l - 1;
  for (i = 0; i < (l / 2); i++, j--) {
    if (*(p + i) != *(p + j))
      s = 0;
  }
  return s;
}

[Answer 11:]

#include <stdio.h>
#include <string.h>
#define N 80
int Judger(char *p);
int main() {
  int ren;
  char str[N];
  gets(str);
  ren = Judger(str);
  if (ren == 1) {
    printf("%s", str);
  } else {
    printf("No!");
  }
  return 0;
}
int Judger(char *p) {
  int len = 0, i, j;
  len = strlen(p);
  for (i = 0, j = len - 1; i < j; i++, j--) {
    if (p[i] != p[j])
      return 0;
  }
  return 1;
}

[Answer 12:]

#include <stdio.h>
int Judger(char *p) {
  int i;
  char str[256];
  int n;
  n = strlen(p);
  for (i = 0; n >= 0; i++)
    str[i] = p[--n];
  str[i] = '\0';
  if (strcmp(str, p) == 0)
    return 1;
  return 0;
}
int main() {
  char str[256];
  gets(str);
  if (Judger(str))
    printf("%s", str);
  else
    printf("No!");
  return 0;
}


[12 answers found]