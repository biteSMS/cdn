[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int Judger(char a[]) {
  int i, j, k = 0;
  for (i = 0, j = strlen(a) - 1; i < j; i++, j--) {
    if (a[i] != a[j]) {
      k = 1;
      break;
    }
  }
  return k;
}
int main() {
  const int n = 100;
  char a[n];
  int k;
  gets(a);
  k = Judger(a);
  if (k == 0)
    printf("%s", a);
  else
    printf("No!");
  return 0;
}

[Answer 2:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {
  int i, j, k = 1;
  for (i = 0, j = strlen(a) - 1; i < j; i++, j--) {
    if (a[i] != a[j])
      k = 0;
  }
  return k;
}
int main() {
  char a[100];
  int k;
  gets(a);
  k = Judger(a);
  if (k == 1)
    printf("%s", a);
  else
    printf("No!");
  return 0;
}

[Answer 3:]

#include <stdio.h>
int Judger(char a[]) {
  int i, l;
  l = strlen(a);
  for (i = 0; i < l / 2; i++) {
    if (a[i] != a[l - i - 1]) {
      return 0;
    }
  }
  return 1;
}
int main() {
  char str[10];
  int flag = 1;
  gets(str);
  flag = Judger(str);
  if (flag == 0) {
    printf("No!");
  } else {
    puts(str);
  }
}

[Answer 4:]

#include "stdio.h"
#include "string.h"
int f(char *s) {
  int i, j;
  j = strlen(s);
  j--;
  for (i = 0; i < j && s[i] == s[j]; i++, j--)
    ;
  if (i >= j)
    return 1;
  return 0;
}
main() {
  char s[80];
  gets(s);
  if (f(s) == 1)
    puts(s);
  else
    printf("No!");
}

[Answer 5:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]);
int main() {
  char a[80];
  int flag;
  gets(a);
  flag = Judger(a);
  if (flag == 1) {
    puts(a);
  } else {
    printf("No!");
  }
  return 0;
}
int Judger(char a[]) {
  char *pStar, *pEnd;
  int i, j, flag = 1;
  j = strlen(a);
  pStar = &a[0];
  pEnd = &a[j - 1];
  for (i = 0; i < (j / 2); i++) {
    if (*pStar != *pEnd) {
      flag = 0;
    }
    pStar++;
    pEnd--;
  }
  return flag;
}

[Answer 6:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]);
int main() {
  char s[100];
  int n;
  gets(s);
  n = Judger(s);
  if (n)
    puts(s);
  else
    printf("No!");
  return 0;
}
int Judger(char a[]) {
  int len, i, flag = 1;
  len = strlen(a);
  for (i = 0; i < len / 2 && flag == 1; i++) {
    if (a[i] != a[len - i - 1])
      flag = 0;
  }
  if (flag)
    return 1;
  else
    return 0;
}

[Answer 7:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 500
int Judger(char a[]);

int main() {
  char str[N];

  gets(str);

  if (Judger(str) == 1) {
    puts(str);
  } else {
    printf("No!\n");
  }

  return 0;
}

int Judger(char a[]) {
  int i, j;
  int flag = 1;
  j = strlen(a) - 1;
  for (i = 0, j; i <= j; i++, j--) {
    if (a[i] != a[j]) {
      flag = 0;
    }
  }
  return flag;
}

[Answer 8:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 500
int Judger(char a[]);

int main() {
  char str[N];

  gets(str);

  if (Judger(str) == 1) {
    puts(str);
  } else {
    printf("No!\n");
  }

  return 0;
}

int Judger(char a[]) {
  int i, j;
  int flag = 1;
  j = strlen(a) - 1;
  for (i = 0, j; i <= j; i++, j--) {
    if (a[i] != a[j]) {
      flag = 0;
    }
  }
  return flag;
}

[Answer 9:]

/*请按给定的函数原型，编写程序判断输入的字符串是否为“回文”。所谓“回文”，
是指顺读和倒读都一样的字符串。如：“level”、“ABCCBA”都是回文。如是回文输出这个字符串，
否则输出“No!”。要求：在主函数读入字符串，判断是否是回文调用Judger()函数实现。若是回文返回值为1，
否则返回值为0。Judger函数函数原型：int Judger( char a[ ]);
**输入格式要求：无
**输出格式要求："No!" （不是回文） 说明：是回文则输出串本身
程序运行的输入输出样例1：
输入：
abc
输出：
No!
程序运行的输入输出样例2：
输入：
12321
输出：
12321*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int Judger(char a[]) {
  int len = strlen(a), i, flag = 1;
  char *p = a;
  char *q = a + len - 1;
  for (i = 0; i < strlen(a) / 2; ++i) {
    if (*p++ != *q--)
      flag = 0;
  }
  return flag ? 1 : 0;
}

int main(void) {
  char str[10];
  gets(str);
  if (Judger(str))
    printf("%s", str);
  else
    printf("No!");
}

[Answer 10:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {

  int n, i, count = 0, s;
  n = strlen(a);
  s = n;
  n--;

  for (i = 0; (i <= (n / 2)) && i <= n; i++, n--) {

    if (a[i] == a[n]) {
      count++;
    }
  }

  if (count == (s / 2)) {
    return 1;
  } else {
    return -1;
  }
}
int main() {
  int s;
  const int size = 20;

  char a[size];
  gets(a);

  s = Judger(a);

  if (s == -1) {
    printf("No!");
  } else {
    puts(a);
  }
}

[Answer 11:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {
  int i, flag = 1;
  for (i = 0; flag == 1 && 2 * i <= strlen(a); i++) {
    if (a[i] != a[strlen(a) - 1 - i])
      flag = 0;
  }
  return flag;
}
int main() {
  const int size = 100;
  char str[size], key;
  gets(str);
  key = Judger(str);
  if (key == 1)
    puts(str);
  else
    printf("No!");
  return 0;
}

[Answer 12:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {
  int i, flag = 1;
  for (i = 0; flag == 1 && 2 * i <= strlen(a); i++) {
    if (a[i] != a[strlen(a) - 1 - i])
      flag = 0;
  }
  return flag;
}
int main() {
  const int size = 100;
  char str[size], key;
  gets(str);
  key = Judger(str);
  if (key == 1)
    puts(str);
  else
    printf("No!");
  return 0;
}

[Answer 13:]

#include <stdio.h>
#include <string.h>
#define N 80
int Judger(char a[]);
int main() {
  char a[N];
  gets(a);
  Judger(a);
  if (Judger(a) == 1)
    printf("%s\n", a);
  else
    printf("No!\n");
  return 0;
}
int Judger(char a[]) {
  int i, j;
  for (i = 0, j = strlen(a) - 1; i < j; i++, j--) {
    if (a[i] != a[j])
      return 0;
  }
  return 1;
}

[Answer 14:]

#include <stdio.h>
#include <string.h>
#define N 80
int Judger(char a[]);
int main() {
  int a[N], i;
  gets(a);
  if (Judger(a) == 1)
    puts(a);
  else
    printf("No!");
  return 0;
}
int Judger(char a[]) {
  int i, n;
  n = strlen(a);
  for (i = 0; i < n / 2; i++) {
    if (a[i] != a[n - i - 1])
      return 0;
  }
  return 1;
}

[Answer 15:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int Judger(char a[]);

int main() {
  char a[100];
  int x;
  gets(a);
  x = Judger(a);
  if (x == 1)
    puts(a);
  else
    printf("No!");
  return 0;
}

int Judger(char a[]) {
  int i, len;
  len = strlen(a) - 1;
  for (i = 0; i < len; i++) {
    if (a[i] != a[len - i]) {
      return 0;
    }
  }
  return 1;
}

[Answer 16:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {
  int i, k, j = 0;
  for (i = 0; i < 15; i++) {
    if (a[i] != '\0')
      j++;
    else
      break;
  }
  if (j % 2 == 0)
    return 0;
  for (i = 0, k = j; i < (j - 1) / 2; i++, k--) {
    if (a[i] != a[k - 1])
      return 0;
  }
  return 1;
}
int main() {
  int x;
  char a[15];
  scanf("%s", &a);
  x = Judger(a);
  if (x == 1)
    puts(a);
  else
    printf("No!");
  return 0;
}

[Answer 17:]

#include <stdio.h>
#include <string.h>
int main() {
  char a[10], b[10];
  int i, j;
  gets(a);
  for (i = strlen(a) - 1; i >= 0; i--)
    b[i] = a[strlen(a) - i - 1]; // b变成a的逆序数组
  b[strlen(a)] = '\0';           // b的结尾符
  if (strcmp(a, b) == 0)
    printf("%s", a);
  else
    printf("No!");
  return 0;
}

[Answer 18:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int Judger(char a[]);
int main() {
  char a[20], b, c;
  gets(a);
  Judger(a);
  system("pause");
  return 0;
}
int Judger(char a[]) {
  char *b, c, d;
  int e, f, g = 0;
  e = strlen(a);
  for (f = 0; f < e / 2; f++) {
    if (a[f] != a[e - f - 1]) {
      printf("No!");
      g = 1;
      break;
    }
  }
  if (g == 0) {
    puts(a);
  }
  return 0;
}

[Answer 19:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int Judger(char a[]);
int main() {
  char a[50], b, c;
  int d, e, i, j;
  gets(a);
  d = Judger(a);
  if (d == 0) {
    printf("No!");
  }
  if (d == 1) {
    puts(a);
  }
  system("pause");
  return 0;
}
int Judger(char a[]) {
  int i, l;
  char *j, *k;
  l = strlen(a);
  for (i = 0; i < l / 2; i++) {
    j = &a[i];
    k = &a[l - 1 - i];
    if (*j != *k) {
      return 0;
    }
  }
  if (i >= l / 2) {
    return 1;
  }
}

[Answer 20:]

#include <stdio.h>
#include <string.h>
#define N 40
int Judger(char s[]) {
  int i, j, len, k;
  len = strlen(s);
  for (i = 0, j = len - 1; i < j; i++, j--) {
    if (s[i] == s[j])
      k = 1;

    else
      k = 0;
    break;
  }
  return k;
}

int main() {
  char a[N];
  gets(a);
  if (Judger(a) == 1)
    puts(a);
  else
    printf("No!");
  return 0;
}

[Answer 21:]

#include <stdio.h>
#include <string.h>
int F(char *p);
int main() {
  int i, res;
  char a[20];
  gets(a);
  res = F(a);

  if (res == 0)
    printf("%s", a);
  else
    printf("No!");
}
int F(char *p) {
  int i, l, flag = 0;
  char *p2 = NULL;
  l = strlen(p);
  p2 = p + l - 1;
  for (; p < p2; p++, p2--) {
    if (*p != *p2) {
      flag = 1;
      break;
    }
  }
  return flag;
}

[Answer 22:]

#include <stdio.h>
#include <string.h>
int F(char *p);
int main() {
  int i, res;
  char a[20];
  gets(a);
  res = F(a);
  if (res == 0)
    printf("%s", a);
  else
    printf("No!");
}
int F(char *p) {
  int i, l, flag = 0;
  char *p2 = NULL;
  l = strlen(p);
  p2 = p + l - 1;
  for (; p < p2; p++, p2--) {
    if (*p != *p2) {
      flag = 1;
      break;
    }
  }
  return flag;
}

[Answer 23:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int Judger(char a[]);
int main() {
  int result;
  char a[20];
  gets(a);
  result = Judger(a);
  if (result == 1) {
    printf("%s", a);
  } else {
    printf("No!");
  }
  return 0;
}
int Judger(char a[]) {
  int length;
  length = strlen(a);
  int i, L;
  int flag = 1;
  if (length % 2 == 0) {
    L = length / 2 - 1;
  } else {
    L = length / 2;
  }
  for (i = 0; i <= L; i++) {
    if (a[i] != a[length - i - 1]) {
      flag = 0;
      break;
    }
  }
  if (flag == 1) {
    return 1;
  } else {
    return 0;
  }
}

[Answer 24:]

#include <stdio.h>
#include <string.h>
#define N 50
int Judger(char a[]);
int main() {
  char a[N];
  int k;
  gets(a);
  k = Judger(a);
  if (k == 1)
    printf("%s", a);
  else
    printf("No!");
}
int Judger(char a[]) {
  int len, i, l = 0;
  char *p, *q;
  p = a;
  len = strlen(a);
  q = a + len - 1;
  for (i = 0; i < ((len + 1) / 2); i++) {
    if (*p == *q) {
      l++;
    }
    p++;
    q--;
  }
  if (l == ((len + 1) / 2))
    return 1;
  else
    return 0;
}

[Answer 25:]

#include <stdio.h>
#include <string.h>
#define N 100
int Judger(char a[]);
int main() {
  char a[N];
  int count;
  gets(a);
  count = Judger(a);
  if (count == 1)
    puts(a);
  else
    printf("No!");
}
int Judger(char a[]) {
  int len, i, j = 0, k = 0;
  char *p, *q;
  len = strlen(a);
  i = (len + 1) / 2;
  p = a;
  q = a + len - 1;
  for (j = 0; j < i; j++) {
    if (*p == *q)
      k++;
    p++;
    q--;
  }
  if (k == i)
    return 1;
  else
    return 0;
}

[Answer 26:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {
  int start = 0, end = strlen(a) - 1;
  int flag = 1;

  for (; start < end; start++, end--) {
    if (a[start] != a[end]) {
      flag = 0;
    }
  }
  return flag;
}
int main() {
  const int size = 20;
  char s[size];
  gets(s);
  Judger(s) ? printf("%s", s) : printf("No!\n");
  return 0;
}

[Answer 27:]

#include <stdio.h>
#include <string.h>
int Judger(char a[80]);

int main() {
  char a[80], b[80];
  char t;
  int n, s, i;
  gets(a);
  s = strlen(a);
  n = Judger(a);
  if (n == 1)
    printf("No!");
  if (n == 0) {
    for (i = s - 1; i >= 0; i--) {
      b[i] = a[s - i - 1];
    }
    b[s] = '\0';

    puts(b);
  }
}

int Judger(char a[80]) {
  int i, n;
  char t;
  char b[80];
  n = strlen(a);
  for (i = n - 1; i >= 0; i--) {
    b[i] = a[n - 1 - i];
  }
  b[n] = '\0';

  if (strcmp(a, b) == 0)
    return 0;
  else
    return 1;
}

[Answer 28:]

#include <stdio.h>
#include <string.h>
#define N 80
int Judger(char *p) {
  int i, flag = 1, len = strlen(p);
  for (i = 0; i <= len / 2 && flag; i++) {
    if (p[i] != p[len - 1 - i]) {
      flag = 0;
    }
  }
  return flag;
}
int main() {
  char s[N];
  gets(s);
  Judger(s) ? puts(s) : printf("No!");
  return 0;
}

[Answer 29:]

#include <stdio.h>
#include <string.h>
#define N 100
int Judger(char a[]) {
  int i, j;
  j = strlen(a) - 1;
  for (i = 0; i < j; i++, j--) {
    if (a[i] != a[j]) {
      return 0;
    }
  }
  return 1;
}
/*void InputMatrix(int a[][N])
{
        int i,j;
        for(i=0;i<N;i++)
        {
                for(j=0;j<N;j++)
                {
           scanf("%d",&a[i][j]);
                }
        }


}*/

main() {

  int i;
  char a[N];

  gets(a);

  i = Judger(a);
  if (i == 0) {
    printf("No!");
  }
  if (i == 1) {
    printf("%s", a);
  }
}

[Answer 30:]

#include <stdio.h>

int fun(char *p) {
  if (p == NULL)
    return -1;
  else {
    int length = 0;
    int i = 0;
    int judge = 1;
    length = strlen(p);
    for (i = 0; i < length / 2; i++) {
      if (p[i] != p[length - 1 - i])
        judge = 0;
      break;
    }
    if (judge == 0)
      return 0;
    else
      return 1;
  }
}

void main() {
  int const size = 100;
  char str1[size];
  gets(str1);
  int i = fun(str1);
  if (i == 1) {
    puts(str1);
  } else {
    printf("No!");
  }
}

[Answer 31:]

#include <stdio.h>
#include <string.h>
int Judger(char a[]) {
  char strcp[80];
  strcpy(strcp, a);
  int i = 0, len = strlen(a);
  int j = len - 1;
  char temp;
  for (i = 0; i <= len / 2; i++, j--) {
    temp = strcp[j];
    strcp[j] = strcp[i];
    strcp[i] = temp;
  }
  if (strcmp(strcp, a) == 0)
    return 1;
  else
    return 0;
}
int main() {
  char str[80], strcp[80];
  gets(str);
  Judger(str) == 1 ? puts(str) : printf("No!");
}


[31 answers found]