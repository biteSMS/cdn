[Answer 1:]

#include <stdio.h>
#include <string.h>
int main() {
  int i;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i <= 999; i++) {
    if (((i / 100) * (i / 100) * (i / 100) + (i % 10) * (i % 10) * (i % 10) +
         (i / 10 % 10) * (i / 10 % 10) * (i / 10 % 10)) == i)
      printf(" %d ", i);
  }
}

[Answer 2:]

#include <stdio.h>
int main() {
  int n = 100;
  int a, b, c;

  printf("There are following Armstrong number smaller than 1000:\n");
  for (; n < 1000; n++) {
    a = n / 100;
    b = n / 10 % 10;
    c = n % 10;
    if (n == a * a * a + b * b * b + c * c * c)
      printf(" %d ", n);
  }
  return 0;
}

[Answer 3:]

#include <stdio.h>
int main() {
  int a, b, c;
  int i;

  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    c = i % 10;
    b = i / 10 % 10;
    if ((a * a * a + b * b * b + c * c * c) == i) {
      printf(" %d ", i);
    }
  }

  return 0;
}

[Answer 4:]

#include <math.h>
#include <stdio.h>

int slerp(int n) {
  int flag = 0;
  float a, b, c, N;
  a = n % 10;
  b = n % 100 / 10;
  c = n / 100;
  N = pow(a, 3) + pow(b, 3) + pow(c, 3);
  if (N == (float)n)
    return 1;
  else
    return 0;
}
int main() {
  int i, j, a[4], n = 0;
  for (i = 100; i < 1000; i++) {
    if (slerp(i)) {
      a[n] = i;
      n++;
    }
  }
  printf("There are following Armstrong number smaller than 1000:\n");
  for (n = 0; n < 4; n++)
    printf(" %d ", a[n]);
  return 0;
}

[Answer 5:]

#include <stdio.h>
void main() {
  int n, a, t, s = 0;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (n = 2; n <= 1000; n++) {
    t = n;
    s = 0;
    while (t > 0) {
      a = t % 10;
      t = t / 10;
      s = s + a * a * a;
    }
    if (s == n)
      printf(" %d ", n);
  }
}

[Answer 6:]

#include <stdio.h>
void main() {
  int n, a, t, s = 0;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (n = 100; n <= 1000; n++) {
    t = n;
    s = 0;
    while (t > 0) {
      a = t % 10;
      t = t / 10;
      s = s + a * a * a;
    }
    if (s == n)
      printf(" %d ", n);
  }
}

[Answer 7:]

#include <stdio.h>
main() {
  int i, a, b, c, d;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = (i - a * 100) / 10;
    c = i % 10;
    d = a * a * a + b * b * b + c * c * c;
    if (d == i)
      printf(" %d ", i);
  }
}

[Answer 8:]

#include <stdio.h>
main() {
  int i, t, k, a[3];
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 2; i < 1000; i++) {
    for (t = 0, k = 1000; k >= 10; t++) {
      a[t] = (i % k) / (k / 10);
      k /= 10;
    }
    if (a[0] * a[0] * a[0] + a[1] * a[1] * a[1] + a[2] * a[2] * a[2] == i)
      printf(" %d ", i);
  }
}

[Answer 9:]

#include <stdio.h>
main() {
  int i, a, b, c;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = (i - a * 100) / 10;
    c = i % 10;
    if (i == a * a * a + b * b * b + c * c * c)
      printf(" %d ", i);
  }
}

[Answer 10:]

#include <stdio.h>
main() {
  int i, a, b, c;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = (i - a * 100) / 10;
    c = i % 10;
    if (i == a * a * a + b * b * b + c * c * c)
      printf(" %d ", i);
  }
}

[Answer 11:]

#include <stdio.h>
void main() {
  printf("There are following Armstrong number smaller than 1000:\n");
  printf(" %d  %d  %d  %d ", 153, 370, 371, 407);
}

[Answer 12:]

#include <stdio.h>
int main() {
  int a[10];
  int i, j, k, t = 0;
  for (i = 1; i < 10; i++) {
    for (j = 0; j < 10; j++) {
      for (k = 0; k < 10; k++) {
        if (i * 100 + j * 10 + k == i * i * i + j * j * j + k * k * k) {
          a[t] = i * 100 + j * 10 + k;
          t++;
        }
      }
    }
  }
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 0; i < t; i++) {
    printf(" %d ", a[i]);
  }
  return 0;
}

[Answer 13:]

#include <stdio.h>
int main() {

  printf("There are following Armstrong number smaller than 1000:\n");
  printf(" 153  370  371  407");
}

[Answer 14:]

#include <math.h>
#include <stdio.h>
int main() {
  int i;
  int a, b, c, s = 0;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = i % 100 / 10;
    c = i % 10;
    s = pow(a, 3) + pow(b, 3) + pow(c, 3);
    if (i == s)
      printf(" %d ", i);
  }
  return 0;
}

[Answer 15:]

#include <stdio.h>
int main() {
  int i, ge, shi, bai;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    ge = i % 10;
    shi = i / 10 % 10;
    bai = i / 100;
    if (ge * ge * ge + shi * shi * shi + bai * bai * bai == i)
      printf(" %d ", i);
  }
  return 0;
}

[Answer 16:]

#include <math.h>
#include <stdio.h>
int main() {
  int k[10], i = 0, a, b, c, s;

  for (s = 100; s < 1000; s++) {
    a = s / 100;
    b = s / 10 % 10;
    c = s % 10;
    if (s == a * a * a + b * b * b + c * c * c) {
      k[i] = s;
      i++;
    }
  }
  printf("There are following Armstrong number smaller than 1000:\n");
  printf(" %d ", 153);
  printf(" %d ", 370);
  printf(" %d ", 371);
  printf(" %d ", 407);
}

[Answer 17:]

#include <math.h>
#include <stdio.h>
#include <stdlib.h>
main() {
  int n = 100, i, j, k;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (n = 100; n < 1000; n++) {
    i = n % 10;
    j = (n / 10) % 10;
    k = n / 100;
    if (n == pow(i, 3) + pow(j, 3) + pow(k, 3)) {
      printf(" %d ", n);
    }
  }
}

[Answer 18:]

#include <stdio.h>
int main() {
  int a, b, c, d, i;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = i / 10 % 10;
    c = i % 10;
    if (a * a * a + b * b * b + c * c * c == i)
      printf(" %d ", i);
  }
}

[Answer 19:]

#include <stdio.h>
main() {
  int a, b, c, i;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = (i - a * 100) / 10;
    c = i % 10;
    if ((a * a * a + b * b * b + c * c * c) == i)
      printf(" %d ", i);
  }
}

[Answer 20:]

#include <stdio.h>

main() {
  int i, j, k, z;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 1; i <= 9; i++) {
    for (j = 0; j <= 9; j++) {
      for (k = 0; k <= 9; k++) {
        z = i * i * i + j * j * j + k * k * k;
        if (z == i * 100 + j * 10 + k)
          printf(" %d ", z);
      }
    }
  }
}

[Answer 21:]

#include <math.h>
#include <stdio.h>
main() {
  int a, b, c;
  int i;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (i = 100; i < 1000; i++) {
    a = i / 100;
    c = i % 10;
    b = i % 100 / 10;
    if (i == a * a * a + b * b * b + c * c * c) {
      printf(" %d ", i);
    }
  }
}

[Answer 22:]

#include <stdio.h>
#define ARR_SIZE 80
void main() {
  int n, a, t, s = 0;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (n = 1; n <= 1000; n++) {
    t = n;
    s = 0; //应该加入一行s复位。
    while (t > 0) {
      a = t % 10;
      t = t / 10;
      s = s + a * a * a;
    }
    if (s == n && n != 1)
      printf(" %d ", n);
  }
}

[Answer 23:]

#include <math.h>
#include <stdio.h>
main() {
  int i;
  printf("There are following Armstrong number smaller than 1000:\n");
  printf(" ");
  for (i = 100; i < 1000; i++) {
    if (i == (pow(i % 10, 3) + pow(i / 10 % 10, 3) + pow(i / 100, 3))) {
      printf("%d  ", i);
    }
  }
}

[Answer 24:]

#include <stdio.h>

int main() {
  int i, a, b, c;

  printf("There are following Armstrong number smaller than 1000:\n");

  for (i = 100; i < 1000; i++) {
    a = i / 100;
    b = (i / 10) % 10;
    c = i % 10;

    if (i == a * a * a + b * b * b + c * c * c) {
      printf(" %d ", i);
    }
  }

  return 0;
}

[Answer 25:]

#include <stdio.h>
int main(void) {
  int a[1000], b, c, d, e;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (b = 0; b < 1000; b++) {
    a[b] = b + 1;
  }
  for (b = 0; b < 1000; b++) {
    if (a[b] < 100) {
      c = b % 10;
      d = b / 10;
      if (a[b] == c * c * c + d * d * d)
        printf("%d ", a[b]);
    } else if (a[b] < 1000 && a[b] > 100) {
      c = (a[b] % 100) % 10; // ge
      d = (a[b] / 100);      // bai
      e = (a[b] % 100) / 10; // ge
      if (a[b] == c * c * c + d * d * d + e * e * e)
        printf(" %d ", a[b]);
    }
  }
}

[Answer 26:]

#include <stdio.h>
int main() {
  int i, m, k, n;
  printf("There are following Armstrong number smaller than 1000:\n");
  for (n = 2; n <= 1000; ++n) {
    //计算n的各位数的立方和m
    k = n;
    m = 0;
    while (k > 0) {
      i = k % 10;
      m += i * i * i;
      k = k / 10;
    }
    if (m == n) // n和其各位数的立方和相等
    {
      printf(" %d ", m);
    }
  }
  printf("\n");
  return 0;
}

[Answer 27:]

#include <stdio.h>
int main() {
  printf("There are following Armstrong number smaller than 1000:\n");
  printf(" %d  %d  %d  %d", 153, 370, 371, 407); // 153  370  371  407
  return 0;
}

[Answer 28:]

#include <stdio.h>
main() {
  printf("There are following Armstrong number smaller than 1000:\n 153  370  "
         "371  407");
}


[28 answers found]