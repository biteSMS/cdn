[Answer 1:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
int main() {
  char str[100];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  int i, len;
  char t;
  len = strlen(str);
  for (i = 0; i < len / 2; i++) {
    t = str[i];
    str[i] = str[len - i - 1];
    str[len - i - 1] = t;
  }
}

[Answer 2:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
int main() {
  char s[N];
  printf("Input a string:\n");
  gets(s);
  Inverse(s);
  printf("Inversed results:\n");
  puts(s);
  return 0;
}
void Inverse(char str[]) {
  char t[N];
  int i, n;
  n = strlen(str);
  strcpy(t, str);
  for (i = 0; str[i] != '\0'; i++) {
    str[i] = t[n - i - 1];
  }
}

[Answer 3:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
int main() {
  char s[N];
  printf("Input a string:\n");
  gets(s);
  Inverse(s);
  printf("Inversed results:\n");
  printf("%s\n", s);
  return 0;
}
void Inverse(char str[]) {
  char t[N];
  int i, j, n;
  n = strlen(str);
  strcpy(t, str);
  for (i = 0, j = 0; i < n; i++) {
    str[j++] = t[n - i - 1];
  }
}

[Answer 4:]

#include <stdio.h>
#include <string.h>
#define N 81
void Inverse(char str[]);
int main() {
  char ch[N];
  printf("Input a string:\n");
  gets(ch);
  Inverse(ch);
  printf("Inversed results:\n");
  printf("%s\n", ch);
  return 0;
}
void Inverse(char str[]) {
  int i, j, len;
  char a[N], temp;
  len = strlen(str);

  for (i = 0; i < len; i++) {
    a[i] = str[i];
  }
  for (i = 0; i < len; i++) {
    str[i] = a[len - i - 1];
  }
}

[Answer 5:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
int main() {
  char str[N];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  int i, j;
  char s[N];
  strcpy(s, str);
  for (i = 0, j = strlen(str) - 1; s[i] != '\0'; i++, j--) {
    str[i] = s[j];
  }
}

学号 16211835 姓名 陈钦月
    得分 1367 实验得分 0 金币数 177 代码行数 3055 答题时间 107787

[Answer 6:]

#include <stdio.h>
void Inverse(char str[]) {
  int i, j;
  char temp;
  for (i = 0; str[i] != '\0'; i++)
    ;
  for (--i, j = 0; j <= i; j++, i--) {
    temp = str[i];
    str[i] = str[j];
    str[j] = temp;
  }
  return;
}
int main() {
  char str[256];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
}

[Answer 7:]

#include <stdio.h>
#include <string.h>
#define N 80

void Inverse(char str[]);

int main() {
  char a[N];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
  printf("Inversed results:\n");
  printf("%s\n", a);
  return 0;
}

void Inverse(char str[]) {
  int i, j, len;
  char c;
  len = strlen(str);
  for (i = 0, j = len - 1; i < j; i++, j--) {
    c = str[i];
    str[i] = str[j];
    str[j] = c;
  }
}

[Answer 8:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
int main() {
  char str[80];
  printf("Input a string:\n");
  gets(str);
  printf("Inversed results:\n");
  Inverse(str);
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  int i, l;
  char temp;
  l = strlen(str);
  for (i = 0; i < l / 2 + 1; i++) {
    temp = str[i];
    str[i] = str[l - 1 - i];
    str[l - 1 - i] = temp;
  }
}

[Answer 9:]

/************************************************
 *Author*        :Lu_s_x
 *Created Time*  : 2017年03月29日 星期三 16时53分18秒
*********************************************/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 80
void Inverse(char str[]) {
  int i, j;
  char temp;
  for (i = 0, j = strlen(str) - 1; i < j; i++, j--) {
    temp = str[i];
    str[i] = str[j];
    str[j] = temp;
  }
}
int main() {
  char a[N];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
  printf("Inversed results:\n");
  printf("%s\n", a);
  return 0;
}

[Answer 10:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
int main() {
  char str[N];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  char pstr[N];
  int i, n;
  n = 0;
  while (str[n] != '\0') {
    n++;
  }
  for (i = 0, n--; n >= 0; i++, n--) {
    pstr[i] = str[n];
  }
  pstr[i] = '\0';
  strcpy(str, pstr);
}

[Answer 11:]

#include <stdio.h>
#include <string.h>
const int N = 16;

void Inverse(char str[]);

int main() {
  char str[N];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}

void Inverse(char str[]) {
  char temp[N];
  int i, j;
  int n = strlen(str);
  strcpy(temp, str);
  for (i = 0, j = n - 1; j >= 0; i++, j--) {
    str[i] = temp[j];
  }
}

[Answer 12:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]) {
  int i, j;
  char a[100];
  strcpy(a, str);
  for (i = 0, j = strlen(str) - 1; str[i] != '\0'; i++, j--)
    str[i] = a[j];
}
main() {
  char a[80];
  printf("Input a string:\n");
  gets(a);
  printf("Inversed results:\n");
  Inverse(a);
  printf("%s\n", a);
}

[Answer 13:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
int main() {
  char x[80];
  printf("Input a string:\n");
  gets(x);
  Inverse(x);
  printf("Inversed results:\n");
  printf("%s\n", x);
}
void Inverse(char str[]) {
  int i, j, k;
  char temp;
  k = strlen(str);
  for (i = 0; i < k / 2; i++) {
    temp = str[k - i - 1];
    str[k - i - 1] = str[i];
    str[i] = temp;
  }
}

[Answer 14:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]) {
  int i, n;
  char c;
  n = strlen(str);
  for (i = 0; i < n / 2; i++) {
    c = str[i];
    str[i] = str[n - i - 1];
    str[n - i - 1] = c;
  }
  printf("Inversed results:\n");
  printf("%s\n", str);
}
main() {
  char a[80];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
}

[Answer 15:]

#include <stdio.h>
#include <string.h>
#define M 80
void Inverse(char str[]);
main() {
  char str[M];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  puts(str);
  return 0;
}
void Inverse(char str[]) {
  char *p, c;
  int i;
  p = str;
  for (i = 0; i <= strlen(str) / 2; i++) {
    c = *(p + i);
    *(p + i) = *(p + strlen(str) - i - 1);
    *(p + strlen(str) - i - 1) = c;
  }
}

[Answer 16:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
#define N 80
int main() {
  char str[N];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
}
void Inverse(char str[]) {
  int j, i, len, temp;
  len = strlen(str);
  for (i = 0, j = len - 1; i < len / 2; i++, j--) {
    temp = str[i];
    str[i] = str[j];
    str[j] = temp;
  }
}

[Answer 17:]

#include <stdio.h>
#define N 80
void Inverse(char str[]);
int main() {
  char a[N];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
  printf("Inversed results:\n");
  printf("%s\n", a);
  return 0;
}
void Inverse(char str[]) {
  char temp, *p1 = str, *p2 = str;
  while (*p2 != '\0')
    p2++;
  p2--;
  while (p1 < p2) {
    temp = *p1;
    *p1 = *p2;
    *p2 = temp;
    p1++;
    p2--;
  }
}

[Answer 18:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
int main() {
  char str[81];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  char c;
  int i, j;
  j = strlen(str) - 1;
  for (i = 0; i < j; i++, j--) {
    c = str[i];
    str[i] = str[j];
    str[j] = c;
  }
}

[Answer 19:]

#include <stdio.h>
#include <string.h>
void Inverse(char *str) {
  char s[80] = {};
  int i, j = 0;
  for (i = strlen(str); i > 0; i--) {
    s[j] = str[i - 1];
    j++;
  }
  for (i = 0; i < strlen(str); i++) {
    *(str + i) = s[i];
  }
}
int main() {
  char str[80];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}

[Answer 20:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
main() {
  char a[80];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
  printf("Inversed results:\n");
  printf("%s\n", a);
}
void Inverse(char str[]) {
  int i, j, m;
  char k;
  i = strlen(str);
  m = i;
  for (j = 0; j < (i / 2); j++, m--) {
    k = str[j];
    str[j] = str[m - 1];
    str[m - 1] = k;
  }
}

[Answer 21:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
int main() {
  char str[80];
  int i, j;
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0.;
}
void Inverse(char str[]) {
  char st[80];
  int n, i, j;
  n = strlen(str);
  for (i = 0, j = n - 1; j >= 0, i < n; i++, j--) {
    st[i] = str[j];
  }
  st[i] = '\0';
  strcpy(str, st);
}

[Answer 22:]

#include <stdio.h>
void Inverse(char str[]);
int main() {
  char s[80];
  printf("Input a string:\n");
  gets(s);
  Inverse(s);
  return 0;
}
void Inverse(char str[]) {
  int i, j, m;
  char s2[80];
  for (i = 0; str[i] != 0; i++)
    ;
  i--;
  m = i;
  for (j = 0; j <= m; j++) {
    s2[j] = str[i];
    i--;
  }
  s2[j] = 0;
  printf("Inversed results:\n");
  printf("%s\n", s2);
}

[Answer 23:]

#include <stdio.h>
#include <string.h>
void Inverse(char str[]);
int main() {
  printf("Input a string:\n");

  char a[100];

  gets(a);

  Inverse(a);

  printf("Inversed results:\n");

  puts(a);

  return 0;
}
void Inverse(char str[]) {
  int len = strlen(str);
  int i;
  for (i = 0; i < len / 2; i++) {
    char t = str[i];
    str[i] = str[len - i - 1];
    str[len - i - 1] = t;
  }
}

[Answer 24:]

#include "stdio.h"
#include "string.h"
int dh(char *s, int len) {
  int i;
  char c;
  for (i = 0; i <= len / 2; i++) {
    c = *(s + i);
    *(s + i) = *(s + len - i);
    *(s + len - i) = c;
  }
}
int main() {
  char s[80], len = 0;
  printf("Input a string:\n");
  gets(s);
  while (s[len] != '\0')
    len++;
  len--;
  dh(s, len);
  printf("Inversed results:\n");
  puts(s);
  return 0;
}

[Answer 25:]

#include <stdio.h>
void Inverse(char str[]);
int main() {
  char str[80];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
}
void Inverse(char str[]) {
  char b[80];
  int i, j = 0;
  for (i = 0; str[i] != '\0'; i++)
    b[i] = str[i];
  for (i--; i >= 0; i--)
    str[j++] = b[i];
}

[Answer 26:]

#include <stdio.h>
#include <stdlib.h>
void Inverse(char str[]);
int main() {
  char str[80];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  int i, j;
  char c;
  for (i = 0; str[i]; i++)
    ;
  i--;
  for (j = 0; j <= i; j++) {
    c = str[j];
    str[j] = str[i];
    str[i--] = c;
  }
}

[Answer 27:]

#include <stdio.h>
void Inverse(char str[]);
int main() {
  char str[100];
  printf("Input a string:\n");
  gets(str);
  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}
void Inverse(char str[]) {
  char *p = str, *pr = str, temp;
  while (*(pr + 1) != 0) {
    pr++;
  }
  while (p <= pr) {
    temp = *p;
    *p = *pr;
    *pr = temp;
    p++;
    pr--;
  }
}

[Answer 28:]

#include <stdio.h>
#include <string.h>
#define N 80
void Inverse(char str[]);
int main() {
  char a[N];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);
  printf("Inversed results:\n");
  printf("%s\n", a);
  return 0;
}
void Inverse(char str[]) {
  int i = 0;
  int len = strlen(str);
  while (i < len / 2) {
    char temp;
    temp = str[i];
    str[i] = str[len - 1 - i];
    str[len - 1 - i] = temp;
    i++;
  }
}

[Answer 29:]

#include <stdio.h>
#include <stdlib.h>
void Inverse(char str[]);

int main() {
  char a[80];
  printf("Input a string:\n");
  gets(a);
  Inverse(a);

  return 0;
}
void Inverse(char str[]) {
  int i, j = 0;
  char b[80];
  printf("Inversed results:\n");
  for (i = 0; str[i] != '\0'; i++)
    ;
  i--;
  for (; i >= 0; i--) {
    b[j] = str[i];
    j++;
  }
  b[j] = '\0';
  printf("%s\n", b);
}

[Answer 30:]

#include "stdio.h"
#include "string.h"
#define N 80
void Inverse(char str[]);
int main() {
  char str[N];

  printf("Input a string:\n");
  gets(str);

  Inverse(str);
  printf("Inversed results:\n");
  printf("%s\n", str);
  return 0;
}

void Inverse(char str[]) {
  int len, i, j;
  char temp;
  len = strlen(str);
  for (i = 0, j = len - 1; i < len / 2; i++, j--) {
    temp = str[i];
    str[i] = str[j];
    str[j] = temp;
  }
}


[30 answers found]