[Answer 1:]


#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  scanf("%s", a); //?
  scanf(" %c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j, count;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) == c) {
      count = i;
      for (j = i + 1; *(s + i) = *(s + j); i++, j++) {
        ;
      }
      i = count - 1;
    }
  }
  *(s + i) = '\0';
}

[Answer 2:]

#include <stdio.h>
void Squeeze(char *s, char c);
void main() {
  char a[80], c;
  scanf("%s", a);
  getchar();
  scanf("%c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 3:]


#include <stdio.h>
void Squeeze(char *s, char c);
void main() {
  char a[80], c;
  scanf("%s", a);
  getchar();
  scanf("%c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 4:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  scanf("%s", a);
  getchar();
  scanf("%c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 5:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  gets(a);
  scanf("%c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 6:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  gets(a);
  scanf("%c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 7:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c, *s;
  s = a;
  scanf("%s %c", a, &c);
  Squeeze(s, c);
  printf("%s\n", s);
}
void Squeeze(char *s, char c) {
  int i, j;
  for (i = 0, j = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 8:]

#include <stdio.h>
void Squeeze(char *s, char c);
int main() {
  char a[80], c, *s;
  scanf("%s", a);
  scanf(" %c", &c);
  s = a;
  Squeeze(s, c);
  printf("%s\n", s);
  return 0;
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 9:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  scanf("%s", a);
  scanf(" %c", &c);

  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}

[Answer 10:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;

  scanf("%s", a);
  scanf(" %c", &c);
  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = 0; s[i] != '\0'; i++) {
    while (s[i] == c) {
      i++;
    }
    s[j++] = s[i];
  }
  s[j] = '\0';
}

[Answer 11:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  gets(a);
  scanf("%c", &c);
  Squeeze(a, c);
  puts(a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;
  for (i = j = 0; s[i] != '\0'; i++)
    if (s[i] != c)
      s[j++] = s[i];
  s[j] = '\0';
}

[Answer 12:]

#include <stdio.h>
void Squeeze(char *s, char c);
main() {
  char a[80], c;
  scanf("%s", &a);
  scanf(" %c", &c);

  Squeeze(a, c);
  printf("%s\n", a);
}
void Squeeze(char *s, char c) {
  int i, j = 0;

  for (i = 0; *(s + i) != '\0'; i++) {
    if (*(s + i) != c) {
      *(s + j) = *(s + i);
      j++;
    }
  }
  *(s + j) = '\0';
}


[12 answers found]