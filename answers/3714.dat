[Answer 1:]

#include <stdio.h>
#include <string.h>
#define N 16
int main() {
  char input[N], l, m = '0';
  int ten[N / 8][8];
  int a[2] = {0};
  int i, j, k = 0;
  gets(input);
  for (i = 0; i < N / 8; i++)
    for (j = 0; j < 8; j++) {
      l = input[k];
      k++;
      ten[i][j] = (int)l - (int)m;
    }
  for (i = 0; i < N / 8; i++) {
    k = 1;
    for (j = 7; j >= 0; j--) {
      a[i] = a[i] + ten[i][j] * k;
      k = k * 2;
    }
  }
  printf("%d#%d", a[0], a[1]);
  return 0;
}

[Answer 2:]

#include <stdio.h>
#include <string.h>
#define N 16
int main() {
  char input[N], l, m = '0';
  int ten[N / 8][8];
  int a[2] = {0};
  int i, j, k = 0;
  gets(input);
  for (i = 0; i < N / 8; i++)
    for (j = 0; j < 8; j++) {
      l = input[k];
      k++;
      ten[i][j] = (int)l - (int)m;
    }
  for (i = 0; i < N / 8; i++) {
    k = 1;
    for (j = 7; j >= 0; j--) {
      a[i] = a[i] + ten[i][j] * k;
      k = k * 2;
    }
  }
  printf("%d#%d", a[0], a[1]);
  return 0;
}
学号 s2015211269 姓名 方首智
    得分 809 实验得分 0 金币数 76 代码行数 2813 答题时间 67771

[Answer 3:]

#include <stdio.h>

int main() {
  char nums[17];
  int i, j, sum1 = 0, sum2 = 0;
  scanf("%s", nums);
  for (i = 0; i < 8; i++) {
    sum1 = sum1 + (nums[i] - '0') * pow(2, 7 - i);
  }

  for (i = 8; i < 16; i++) {
    sum2 = sum2 + (nums[i] - '0') * pow(2, 15 - i);
  }
  printf("%d#%d", sum1, sum2);
  return 0;
}

[Answer 4:]

#include <stdio.h>
int Transform(int x);
int main() {
  long a, b;
  int m, n;
  scanf("%8d", &b);
  scanf("%8d", &a);
  m = Transform(a);
  n = Transform(b);
  printf("%d#%d\n", n, m);
  return 0;
}
int Transform(int x) {
  int i, j, n;
  int sum = 0;
  for (i = 0; i < 8; i++, x = x / 10) {
    n = x % 10;
    for (j = 0; j < i; j++) {
      n = n * 2;
    }
    sum = sum + n;
  }
  return sum;
}

[Answer 5:]

#include <math.h>
#include <stdio.h>
#include <stdlib.h>
int main() {
  char a[16];
  int sum = 0, k = 7, i;
  gets(a);
  for (i = 0; i < 16; i++) {
    if (i == 8) {
      printf("%d#", sum);
      sum = 0;
      k = 7;
    }
    sum += (a[i] - '0') * pow(2, k--);
  }
  printf("%d", sum);
  return 0;
}

[Answer 6:]

#include <math.h>
#include <stdio.h>
void Translate(char *p);
int main(void) {
  char str1[20] = " ";
  gets(str1);
  Translate(str1);

  return 0;
}
void Translate(char *p) {
  int vala = 0, flag = 0;
  int i, j = 7;
  for (i = 0; p[i] != 0; i++) {

    vala += (p[i] - '\0' - 48) * pow(2, j);

    if (j == 0) {
      printf("%d", vala);
      j = 8;
      vala = 0;
      if (flag == 0) {
        printf("#");
      }
      flag++;
    }
    j--;
  }
}


[6 answers found]