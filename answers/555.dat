[Answer 1:]

#include <math.h>
#include <stdio.h>
#include <string.h>

int main() {
  int i, n, j = 1;
  int a[14] = {0};

  for (i = 1; i <= 13; i++) {
    n = 0;

    while (n != i) {
      if (a[j] == 0) {
        n++;

        if (n == i)
          a[j] = i;
      }

      j = j == 13 ? 1 : j + 1;
    }
  }
  for (i = 1; i <= 13; i++)
    printf("%d ", a[i]);

  printf("\n");

  return 0;
}

[Answer 2:]

#include <math.h>
#include <stdio.h>
#include <string.h>

int main() {
  int i, n, j = 1;
  int a[14] = {0};

  for (i = 1; i <= 13; i++) {
    n = 0;

    while (n != i) {
      if (a[j] == 0) {
        n++;

        if (n == i)
          a[j] = i;
      }

      j = j == 13 ? 1 : j + 1;
    }
  }
  for (i = 1; i <= 13; i++)
    printf("%d ", a[i]);

  printf("\n");

  return 0;
}

[Answer 3:]

#include <math.h>
#include <stdio.h>
#include <string.h>

int main() {
  int i, n, j = 1;
  int a[14] = {0};

  for (i = 1; i <= 13; i++) {
    n = 0;

    while (n != i) {
      if (a[j] == 0) {
        n++;

        if (n == i)
          a[j] = i;
      }

      j = j == 13 ? 1 : j + 1;
    }
  }
  for (i = 1; i <= 13; i++)
    printf("%d ", a[i]);

  return 0;
}

[Answer 4:]

#include <stdio.h>
void main() { printf("1 8 2 5 10 3 12 11 9 4 7 6 13"); }

[Answer 5:]

#include <math.h>
#include <stdio.h>
#include <string.h>

int main() {
  int i, n, j = 1;
  int a[14] = {0};

  for (i = 1; i <= 13; i++) {
    n = 0;

    while (n != i) {
      if (a[j] == 0) {
        n++;

        if (n == i)
          a[j] = i;
      }

      j = j == 13 ? 1 : j + 1;
    }
  }
  for (i = 1; i <= 13; i++)
    printf("%d ", a[i]);

  printf("\n");

  return 0;
}

[Answer 6:]

#include <stdio.h>
#define M 13
int main() {
  int *p, i, k = 0, n = 1, a[M + 1];
  p = a;
  for (i = 1; i <= M; i++)
    *(p + i) = 0;
  i = 1;
  while (n <= M) {
    if (*(p + i) == 0)
      k++;
    if (k == n) {
      *(p + i) = n;
      k = 0;
      n++;
    }
    i++;
    if (i == M + 1)
      i = 1;
  }
  for (i = 1; i <= M; i++)
    printf("%d ", *(p + i));
  return 0;
}


[6 answers found]