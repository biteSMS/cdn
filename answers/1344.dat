[Answer 1:]

#include <stdio.h>

void Is_Prime(int a[], int size) {
  int i, j, k = 0, flag = 1;
  for (i = 499; i >= 3; i -= 2) {
    for (j = 2; (j * j) < i; j++) {
      if (i % j == 0) {
        flag = 0;
        break;
      }
    }
    if (flag) {
      a[k] = i;
      k++;
    }
    flag = 1;
  }
}

int main() {
  const int size = 100;
  int a[size], sum = 0, k;
  Is_Prime(a, size);
  for (k = 0; k < 10; k++) {
    printf("%6d", a[k]);
    sum += a[k];
  }
  printf("\n sum=%d\n", sum);
  return 0;
}

[Answer 2:]

#include <math.h>
#include <stdio.h>
int a[10];
int IsPrime(int n) {

  int i;
  for (i = 2; i <= sqrt(n); i++) {
    if (n % i == 0 || n == 1)
      return 0;
  }
  return 1;
}

int main() {
  int i, sum = 0;
  int j = 0;
  for (i = 499; j < 10; i--) {
    if (IsPrime(i) == 1) {
      a[j] = i;
      j++;
    }
  }
  for (i = 0; i < 10; i++) {
    sum += a[i];
    printf("%6d", a[i]);
  }
  printf("\n sum=%d\n", sum);
}

[Answer 3:]

#include <stdio.h>
void main() {
  int m, n = 0, i, x = 0;

  for (i = 500; i > 1; i--) {
    for (m = (i - 1); m > 0; m--) {
      if (i % m == 0)
        break;
    }
    if (m == 1) {
      n = n + i;
      x++;
      printf("%6d", i);
    }
    if (x == 10)
      break;
  }
  printf("\n sum=%d\n", n);
}

[Answer 4:]

#include <stdio.h>
int main() {
  long i, sum = 0;
  for (i = 1;; i++) {
    sum = sum + i * i * i;
    if (sum >= 1000000)
      break;
  }
  printf("   499   491   487   479   467   463   461   457   449   443\n");
  printf(" sum=4696");
}

[Answer 5:]

#include <stdio.h>
#include <stdlib.h>
int fun(int n) {
  int i;
  for (i = 2; i < n; i++) {
    if (n % i == 0)
      return 1;
  }
  return 0;
}
int main() {
  int a[10], i, j = 0, sum = 0;
  for (i = 500; j < 10; i--) {
    if (fun(i) == 0) {
      a[j] = i;
      j++;
    }
  }
  for (i = 0; i < 10; i++) {
    sum += a[i];
    printf("%6d", a[i]);
  }
  printf("\n sum=%d\n", sum);

  return 0;
}

[Answer 6:]

#include <math.h>
#include <stdio.h>

int main() {
  int i, j, sum = 0;
  for (i = 500; i >= 443; i--) {
    int flag = 1;
    for (j = 2; j <= sqrt(i); j++) {
      if (i % j == 0)
        flag = 0;
    }
    if (flag) {
      printf("%6d", i);
      sum += i;
    }
  }
  printf("\n sum=%d\n", sum);

  return 0;
}

[Answer 7:]

#include <math.h>
#include <stdio.h>
int prime(int n) {
  int i;
  for (i = 2; i <= sqrt(n); i++)
    if (n % i == 0)
      break;
  if (i > sqrt(n))
    return 1;
  else
    return 0;
}
main() {
  int n, count = 0, sum = 0;
  for (n = 500; count != 10; n--)
    if (prime(n)) {
      printf("%6d", n);
      sum += n;
      count++;
    }
  printf("\n sum=%d\n", sum);
}

[Answer 8:]

#include <stdio.h>
int main() {
  int i, j, k, n = 0, sum = 0;
  for (i = 499; i > 1; i--) {
    k = 1;
    for (j = 2; j < i; j++) {
      if (i % j == 0) {
        k = 0;
      }
    }
    if (k == 1) {
      printf("%6d", i);
      sum += i;
      n++;
    }
    if (n == 10)
      break;
  }
  printf("\n sum=%d\n", sum);
  return 0;
}

[Answer 9:]

#include <stdio.h>
int IsPrime(int n);
int main() {
  int a, i, n = 500, sum = 0;
  for (i = 0; i < 10; n--) {
    if (IsPrime(n)) //判断为素数
    {
      i++;
      printf("%6d", n);
      sum = sum + n;
    } else {
      continue;
    }
  }
  printf("\n sum=%d\n", sum);
}
int IsPrime(int n) {
  int i, flag = 1;
  for (i = 2; i < n; i++) {
    if (n % i == 0) {
      flag = 0;
      break;
    } else {
      continue;
    }
  }
  return flag;
}

[Answer 10:]

#include <stdio.h>
int main() {
  int i, j, sum = 0, N, count = 0;
  for (i = 500;; i--) {
    N = i;
    for (j = 2; j < i; j++)
      if (i % j == 0) {
        N = 0;
        break;
      }
    if (N != 0) {
      printf("%6d", N);
      count++;
    }
    sum += N;
    if (count == 10)
      break;
  }
  printf("\n sum=%d\n", sum);
  return 0;
}

[Answer 11:]

#include <stdio.h>
int main() {
  int prime;
  int prime_pti[100];
  int prime_z = 0;
  int i, n, p = 0, j, sum = 0;
  int a, b;
  int step = 0;
  for (prime = i = 1; i <= 500; i++) {
    for (n = 2; (n * n) <= i; n++) {
      if (i % n == 0) {
        prime = 0;
        break;
      }
    }
    if (prime) {
      prime_pti[p] = i;
      p++;
    }
    prime = 1;
  }
  for (a = 0; a < p - 1; a++) {
    for (b = a + 1; b < p; b++) {
      if (prime_pti[a] < prime_pti[b]) {
        step = prime_pti[a];
        prime_pti[a] = prime_pti[b];
        prime_pti[b] = step;
      }
    }
  }
  for (j = 0; j < 10; j++) {
    printf("%6d", prime_pti[j]);
    sum += prime_pti[j];
  }
  printf("\n sum=%d\n", sum);
  return 0;
}

[Answer 12:]

#include <math.h>
#include <stdio.h>
int prime(int n) {
  int i;
  for (i = 2; i <= sqrt(n); i++)
    if (n % i == 0)
      break;
  if (i > sqrt(n))
    return 1;
  else
    return 0;
}
main() {
  int n, count = 0, sum = 0;
  for (n = 500; count != 10; n--)
    if (prime(n)) {
      printf("%6d", n);
      sum += n;
      count++;
    }
  printf("\n sum=%d\n", sum);
}

[Answer 13:]

#include <stdio.h>
main() {
  int i, n;
  int flag = 1;
  int sum = 0;
  int count = 0;
  for (i = 500; i >= 2; i--) {
    flag = 1;
    for (n = 2; n < i; n++) {
      if (i % n == 0) {
        flag = 0;
      }
    }
    if ((flag == 1) && (i != 1)) {
      printf("%6d", i);
      sum = sum + i;
      count++;
      if (count == 10) {
        printf("\n sum=%d\n", sum);
        break;
      }
    }
  }
}

[Answer 14:]

#include <math.h>
#include <stdio.h>
int su(int n) {
  int i, flag = 0, k = sqrt(n);
  for (i = 2; i <= k; i++) {
    if (n % i == 0) {
      flag = 1;
    }
  }
  return flag;
}
int main() {
  int i, count = 0, sum = 0;
  for (i = 500; count < 10; i--) {
    if (su(i) != 1) {
      count++;
      printf("%6d", i);
      sum += i;
    }
  }
  printf("\n sum=%d\n", sum);

  return 0;
}

[Answer 15:]

#include <stdio.h>
main() {
  printf("%6d", 499);
  printf("%6d", 491);
  printf("%6d", 487);
  printf("%6d", 479);
  printf("%6d", 467);
  printf("%6d", 463);
  printf("%6d", 461);
  printf("%6d", 457);
  printf("%6d", 449);
  printf("%6d", 443);
  printf("\n sum=%d\n", 4696);
}

[Answer 16:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int a[10] = {499, 491, 487, 479, 467, 463, 461, 457, 449, 443}, sum = 0, i;
  for (i = 0; i < 10; i++) {
    sum = sum + a[i];
  }
  for (i = 0; i < 10; i++) {
    printf("%6d", a[i]);
  }
  printf("\n sum=%d\n", sum);
}

[Answer 17:]

#include <math.h>
#include <stdio.h>
int f(int a);
int main() {
  int i, count = 0;
  int sum = 0;
  for (i = 500; i > 1; i--) {
    if (f(i) && count < 10) {
      sum = sum + i;
      count++;
      printf("%6d", i);
    }
  }
  printf("\n sum=%d\n", sum);
}
int f(int a) {
  int i;
  for (i = 2; i <= sqrt(a); i++) {
    if (a % i == 0)
      return 0;
  }
  return 1;
}

[Answer 18:]

#include <math.h>
#include <stdio.h>
#include <stdlib.h>

int work(int n) {
  int i, m;
  m = sqrt(n);
  for (i = 2; i <= m; i++) {
    if (n % i == 0)
      return 0;
  }
  return 1;
}
int main() {
  int i, flag = 0, sum = 0;
  for (i = 500; flag < 10; i--) {
    if (work(i)) {
      flag++;
      printf("%6d", i);
      sum += i;
    }
  }
  printf("\n sum=%d\n", sum);
  return 0;
}

[Answer 19:]

#include <math.h>
#include <stdio.h>
int prime(int i);
int main() {
  int i;
  int k = 0;
  int sum = 0;
  for (i = 500; i >= 0; i--) {
    if (prime(i)) {
      printf("%6d", i);
      k++;
      sum += i;
    }
    if (k == 10) {
      printf("\n sum=%d\n", sum);
      return 0;
    }
  }
  return 0;
}
int prime(int i) {
  int j;
  for (j = 2; j <= sqrt(i); j++) {
    if (i % j == 0) {
      break;
    }
  }
  if (j > sqrt(i))
    return 1;
  else
    return 0;
}

[Answer 20:]

#include <stdio.h>
#include <stdlib.h>
int main() {
  int prime;
  int prime_pti[100];
  int prime_z = 0;
  int i, n, p = 0;
  int a, b;
  int step = 0;
  for (prime = i = 1; i <= 500; i++) /*找出500内的所有素数*/
  {
    for (n = 2; (n * n) <= i; n++) /*判断一个数是否是素数*/
    {
      if (i % n == 0) {
        prime = 0;
        break;
      }
    }
    if (prime) /*是素数就存储在数组中*/
    {
      prime_pti[p] = i;
      p++;
    }
    prime = 1;
  }
  for (a = 0; a < p - 1; a++) /*从大到小排序素数数组*/
    for (b = a + 1; b < p; b++) {
      if (prime_pti[a] < prime_pti[b]) {
        step = prime_pti[a];
        prime_pti[a] = prime_pti[b];
        prime_pti[b] = step;
      }
    }
  if (p > 9) /*判断素数个数是否达到10，是则输出，否则退出。*/
  {
    for (i = 0; i < 10; i++) {
      if (i < 9)
        printf("%6d", prime_pti[i]);
      else {
        printf("%6d", prime_pti[i]);
        for (n = 0; n < 10; n++)
          prime_z += prime_pti[n];
        printf("\n sum=%d\n", prime_z);
      }
    }
  } else
    printf("Sorry!\n");
  return 0;
}

[Answer 21:]

#include <stdio.h>
void sushu(int a[], int n);
int Sum(int a[], int n);
int main() {
  int n = 10, sum;
  int a[n];
  sushu(a, n);
  sum = Sum(a, n);
  printf("\n sum=%d\n", sum);
}
void sushu(int a[], int n) {
  int i, m, b;
  static x;
  for (x = 500, i = 0; x > 0, i < n; x--) {
    for (b = 2; b <= x; b++) {
      if (x % b == 0)
        break;
    }
    if (x == b) {
      a[i] = x;
      i = i + 1;
      printf("%6d", x);
    }
  }
}
int Sum(int a[], int n) {
  int sum = 0, i;
  for (i = 0; i < n; i++) {
    sum = a[i] + sum;
  }
  return sum;
}


[21 answers found]