[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
#define N 20
void Insertion_sort(int *p, int x, int key) {
  int i;
  for (i = 0; key > p[i] && i < x; i++)
    ;
  if (i == x) {
    p[x] = key;
  } else {
    do {
      p[x] = p[x - 1];
      x--;
    } while (x >= i);
    p[i] = key;
  }
}
int main() {
  int number_prime[N], i, n, x_insert;
  printf("Input array size:");
  scanf("%d", &n);
  printf("Input array:");
  for (i = 0; i < n; i++) {
    scanf("%d", &number_prime[i]);
  }
  printf("Input x:");
  scanf("%d", &x_insert);
  Insertion_sort(number_prime, n, x_insert);
  printf("After insert %d:\n", x_insert);
  for (i = 0; i < n + 1; i++) {
    printf("%4d", number_prime[i]);
  }
  return 0;
}

[Answer 2:]

#include <stdio.h>

int main() {
  int n, x, i;
  printf("Input array size:");
  scanf("%d", &n);
  int a[n + 1];
  printf("Input array:");
  for (i = 0; i < n; i++) {
    scanf("%d", &a[i]);
  }
  printf("Input x:");
  scanf("%d", &x);
  int pos;
  for (i = 0; i < n; i++) {
    if (x < a[i]) {
      pos = i;
      break;
    }
  }
  for (i = n; i >= pos; i--) {
    a[i] = a[i - 1];
  }
  a[pos] = x;
  printf("After insert %d:\n", x);
  for (i = 0; i <= n; i++)
    printf("%4d", a[i]);
  return 0;
}

[Answer 3:]

#include <stdio.h>
#include <stdlib.h>

void Insertion_Sort(int a[], int size, int x) {
  int i, j, k, temp;
  for (i = 0; i < size - 1; i++) {
    k = i;
    for (j = i + 1; j < size; j++) {
      if (a[j] < a[k])
        k = j;
    }
    if (i != k) {
      temp = a[k];
      a[k] = a[i];
      a[i] = temp;
    }
  }
  for (i = 0; i < size; i++) {
    if (a[i] < x && a[i + 1] > x) {
      for (j = 0; j < i; j++) {
        a[j] = a[j + 1];
      }
      a[i] = x;
    }
  }
}

int main() {
  const int SIZE = 10;
  int size, x, num[SIZE], i;
  printf("Input array size:");
  scanf("%d", &size);
  printf("Input array:");
  for (i = 0; i < SIZE; i++) {
    num[i] = 0;
  }
  for (i = 0; i < size; i++) {
    scanf("%d", &num[i]);
  }
  printf("Input x:");
  scanf("%d", &x);
  Insertion_Sort(num, size + 1, x);
  printf("After insert %d:\n", x);
  for (i = 0; i < size + 1; i++) {
    printf("%4d", num[i]);
  }
  return 0;
}


[3 answers found]