[Answer 1:]

#include <stdio.h>
#include <string.h>

int value(char c);
int isOperand(char c);
int evaluate(char *exp);
int num_stack[80];
char op_stack[20];
int cnt_n = 0;
int cnt_o = 0;

int main() {
  char str[80];
  printf("Please input the expression\n");
  scanf("%s", str);
  if (evaluate(str)) {
    int res = 0;
    int i;
    int pos = 0;
    for (i = 0; i < cnt_o; i++) {
      switch (op_stack[i]) {
      case '-':
        num_stack[pos + 1] = num_stack[pos] - num_stack[pos + 1];
        pos++;
        break;
      case '+':
        num_stack[pos + 1] = num_stack[pos] + num_stack[pos + 1];
        pos++;
        break;
      case '*':
        num_stack[pos + 1] = num_stack[pos] * num_stack[pos + 1];
        pos++;
        break;
      case '/':
        num_stack[pos + 1] = num_stack[pos] / num_stack[pos + 1];
        pos++;
        break;
      }
    }
    printf("Value of %s is %d", str, num_stack[pos]);
  } else {
    printf("%s is invalid");
  }
}

int isOperand(char c) {
  if (c >= '0' && c <= '9') {
    return 1;
  }
  return 0;
}

int value(char c) { return c - '0'; }

int evaluate(char *exp) {
  int l = strlen(exp);
  int i = 0;
  if (!isOperand(exp[0])) {
    return 0;
  }
  int num = 0;
  for (i = 0; i <= l; i++) {
    if (isOperand(exp[i])) {
      num = num * 10 + value(exp[i]);
    } else if (!isOperand(exp[i - 1])) {
      return 0;
    } else {
      num_stack[cnt_n++] = num;
      num = 0;
      if (exp[i] != '\0')
        op_stack[cnt_o++] = exp[i];
    }
  }
  return 1;
}


[1 answers found]