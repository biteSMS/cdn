[Answer 1:]

#include <stdio.h>
#define M 10
#define N 10
void InputArray(int a[][N], int m, int n);
void OutputArray(int a[][N], int m, int n);
void ArrayOp(int a[][N], int m, int n, int mode);
int main() {
  int m, n, mode;
  int a[M][N];
  printf("Input m,n:\n");
  scanf("%d,%d", &m, &n);
  printf("Input %d*%d array:\n", m, n);
  InputArray(a, m, n);
  printf("Input operation mode:\n");
  scanf("%d", &mode);
  printf("After operation:\n");
  ArrayOp(a, m, n, mode);
  return 0;
}
void InputArray(int a[][N], int m, int n) {
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
void OutputArray(int a[][N], int m, int n) {
  int i, j;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      printf("%4d", a[i][j]);
    }
    printf("\n");
  }
}
void ArrayOp(int a[][N], int m, int n, int mode) {
  int i, j, b[N][M];
  int k;
  if (mode == 0) {
    for (i = 0; i < m; i++) {
      for (j = 0; j < n / 2; j++) {
        k = a[i][j];
        a[i][j] = a[i][n - 1 - j];
        a[i][n - 1 - j] = k;
      }
    }
    OutputArray(a, m, n);
  } else if (mode == 1) {
    for (i = 0; i < m / 2; i++) {
      for (j = 0; j < n; j++) {
        k = a[i][j];
        a[i][j] = a[m - 1 - i][j];
        a[m - 1 - i][j] = k;
      }
    }
    OutputArray(a, m, n);
  } else {
    for (i = 0; i < m; i++) {
      for (j = 0; j < n; j++) {
        b[j][i] = a[i][j];
      }
    }
    OutputArray(b, n, m);
  }
}

[Answer 2:]

#include <stdio.h>
#include <stdlib.h>
int N = 0;
void InputArray(int a[][N], int m, int n);
void OutputArray(int a[][N], int m, int n);
int ArrayOp(int a[][N], int m, int n, int mode);
void swap(int *a, int *b);

int main() {
  int m = 0, n = 0, i = 0, j = 0;
  printf("Input m,n:\n");
  scanf("%d,%d", &m, &n);
  getchar();
  N = n;
  int matrix[m][n];
  for (; i < m; i++) {
    for (j = 0; j < n; j++)
      matrix[i][j] = 0;
  }
  InputArray(&matrix, m, n);

  int mode = 0;
  printf("Input operation mode:\n");
  scanf("%d", &mode);
  ArrayOp(&matrix, m, n, mode);
  return 0;
}

void InputArray(int a[][N], int m, int n) {
  int i = 0;
  printf("Input %d*%d array:\n", m, n);
  for (; i < m; i++) {
    int j = 0;
    for (; j < n; j++) {
      scanf("%d", &a[i][j]);
      getchar();
    }
  }
}
void OutputArray(int a[][N], int m, int n) {
  printf("After operation:\n");
  int i = 0;
  for (; i < m; i++) {
    int j = 0;
    for (; j < n; j++)
      printf("%4d", a[i][j]);
    printf("\n");
  }
}

int ArrayOp(int a[][N], int m, int n, int mode) {
  if (!mode) {
    int k = 0;
    for (; k < m; k++) {
      int i = 0, j = n - 1;
      while (i < j)
        swap(&a[k][i++], &a[k][j--]);
    }
    OutputArray(a, m, n);
  } else if (mode == 1) {
    int k = 0;
    for (; k < n; k++) {
      int i = 0, j = m - 1;
      while (i < j)
        swap(&a[j--][k], &a[i++][k]);
    }
    OutputArray(a, m, n);
  } else {
    printf("After operation:\n");
    int i = 0;
    for (; i < n; i++) {
      int j = 0;
      for (; j < m; j++)
        printf("%4d", a[j][i]);
      printf("\n");
    }
  }

  return 1;
}

void swap(int *a, int *b) {
  int temp = *a;
  *a = *b;
  *b = temp;
}

[Answer 3:]

#include <stdio.h>
#define N 10
void Input(int a[][N], int m, int n);
void shuipin(int a[][N], int m, int n);
void chuizhi(int a[][N], int m, int n);
void zhuanzhi(int a[][N], int m, int n);
void Output1(int a[][N], int m, int n);
void Output2(int a[][N], int m, int n);
int main() {
  int m, n, t;
  int a[N][N];
  int b[N][N];
  printf("Input m,n:\n");
  scanf("%d,%d", &m, &n);
  Input(a, m, n);
  printf("Input operation mode:\n");
  scanf("%d", &t);
  if (t == 0)
    shuipin(a, m, n);
  else if (t == 1)
    chuizhi(a, m, n);
  else
    zhuanzhi(a, m, n);
  return 0;
}
void Input(int a[][N], int m, int n) {
  int i, j;
  printf("Input %d*%d array:\n", m, n);
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
}
void Output1(int a[][N], int m, int n) {
  int i, j;
  printf("After operation:\n");
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      printf("%4d", a[i][j]);
    }
    printf("\n");
  }
}
void shuipin(int a[][N], int m, int n) {
  int i, j, t;
  for (i = 0; i < m; i++) {
    for (j = 0; j < n - j; j++) {
      t = a[i][j];
      a[i][j] = a[i][n - j - 1];
      a[i][n - j - 1] = t;
    }
  }
  Output1(a, m, n);
}
void chuizhi(int a[][N], int m, int n) {
  int i, j;
  int t;
  for (j = 0; j < n; j++) {
    for (i = 0; i < m - i; i++) {
      t = a[i][j];
      a[i][j] = a[m - i - 1][j];
      a[m - i - 1][j] = t;
    }
  }
  Output1(a, m, n);
}
void zhuanzhi(int a[][N], int m, int n) {
  int t, i, j;
  int b[N][N];
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      b[i][j] = a[i][j];
    }
  }
  for (i = 0; i < m; i++) {
    for (j = 0; j < n; j++) {
      a[j][i] = b[i][j];
    }
  }
  Output2(a, m, n);
}
void Output2(int a[][N], int m, int n) {
  int i, j;
  printf("After operation:\n");
  for (i = 0; i < n; i++) {
    for (j = 0; j < m; j++) {
      printf("%4d", a[i][j]);
    }
    printf("\n");
  }
}


[3 answers found]