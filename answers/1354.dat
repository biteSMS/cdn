[Answer 1:]

#include <stdio.h>
#include <string.h>
int huiwen(int k) //判断回文数
{
  int a[10], i = 0, j;
  while (k > 0) {
    a[i] = k % 10;
    k /= 10;
    i++;
  }
  for (j = 0; j < i; j++)
    if (a[j] != a[i - j - 1])
      return 0;
  return 1;
}

int hwlength(int k) //计算回文数的长度
{
  int a[10], i = 0;
  while (k > 0) {
    a[i] = k % 10;
    k /= 10;
    i++;
  }
  return (i);
}

int prime(int k) //判断质数
{
  int i;
  for (i = 3; i * i <= k; i += 2) //这样可以减少好多次循环
    if (k % i == 0)
      return 0;
  return 1;
}

int main() {
  int a, b, i, j;
  scanf("%d%d", &a, &b);
  for (i = a; i <= b; i++) {
    if (i % 2 == 0 && i != 2) //排除2的倍数
      continue;
    if (i % 5 == 0 && i != 5) //排除5的倍数
      continue;
    if (hwlength(i) % 2 == 0 && i != 11) //回文数的长度为偶且不为11
      continue;                          //这里我偷懒了
    if (!huiwen(i))                      //不是回文直接跳过
      continue;
    if (prime(i))
      printf("%d\n", i);
  }
  return 0;
}

[Answer 2:]

#include <stdio.h>
#include <stdlib.h>
int fun1(int a) {
  int i;
  for (i = 2; i < a; i++) {
    if (a % i == 0)
      return 1;
  }
  return 0;
}
int fun2(int a) {
  int n = a, i, r = 0;
  while (n != 0) {
    i = n % 10;
    r = r * 10 + i;
    n = n / 10;
  }
  if (r == a)
    return 0;
  else
    return 1;
}
int main() {
  int a, b, i;
  scanf("%d %d", &a, &b);
  for (i = a; i <= b; i++) {
    if (fun1(i) == 0) {
      if (fun2(i) == 0)
        printf("%d\n", i);
    }
  }
  return 0;
}

[Answer 3:]

#include <stdio.h>
#include <string.h>
int huiwen(int k) //判断回文数
{
  int a[10], i = 0, j;
  while (k > 0) {
    a[i] = k % 10;
    k /= 10;
    i++;
  }
  for (j = 0; j < i; j++)
    if (a[j] != a[i - j - 1])
      return 0;
  return 1;
}

int hwlength(int k) //计算回文数的长度
{
  int a[10], i = 0;
  while (k > 0) {
    a[i] = k % 10;
    k /= 10;
    i++;
  }
  return (i);
}

int prime(int k) //判断质数
{
  int i;
  for (i = 3; i * i <= k; i += 2) //这样可以减少好多次循环
    if (k % i == 0)
      return 0;
  return 1;
}

int main() {
  int a, b, i, j;
  scanf("%d%d", &a, &b);
  for (i = a; i <= b; i++) {
    if (i % 2 == 0 && i != 2) //排除2的倍数
      continue;
    if (i % 5 == 0 && i != 5) //排除5的倍数
      continue;
    if (hwlength(i) % 2 == 0 && i != 11) //回文数的长度为偶且不为11
      continue;                          //这里我偷懒了
    if (!huiwen(i))                      //不是回文直接跳过
      continue;
    if (prime(i))
      printf("%d\n", i);
  }
  return 0;
}

[Answer 4:]

#include <stdio.h>
#include <stdlib.h>
int Pri(int num);
int main() {
  int a, b, i, num1;
  scanf("%d %d", &a, &b);
  for (i = a; i <= b; i++) {
    num1 = Pri(i);
    if (num1 == 0)
      continue;
    else {
      if (i >= 5 && i <= 10)
        printf("%d\n", i);
      if (i >= 5 && i <= 99) {
        if (i % 10 == i / 10)
          printf("%d\n", i);
      } else if (i >= 100 && i <= 999) {
        if (i % 10 == i / 100)
          printf("%d\n", i);
      } else if (i >= 1000 && i <= 9999) {
        if (i % 10 == i / 1000 && i / 10 % 10 == i / 100 % 10)
          printf("%d\n", i);
      } else if (i >= 10000 && i <= 99999) {
        if (i % 10 == i / 10000 && i / 10 % 10 == i / 1000 % 10)
          printf("%d\n", i);
      }
    }
  }
  return 0;
}
int Pri(int num) {
  int i;
  for (i = 2; i < num; i++) {
    if (num % i == 0)
      return 0;
  }
  return 1;
}

[Answer 5:]

#include <math.h>
#include <stdio.h>

int Prime(long int w) {

  int a, b, c;
  a = w % 2;
  b = 3;
  c = (int)sqrt(w);
  while (a && b <= c) {
    a = w % b;
    b += 2;
  }
  return a;
}

int main() {
  int a, b, c, d, e;
  int m, n;
  long int w;
  scanf("%d %d", &m, &n);
  a = 0;
  b = 0;
  c = 0;
  d = 0;
  e = 4;
  while (a <= 9) {
    e++;
    if (e == 10) {
      e = 0;
      d++;
    }

    if (d == 10) {
      d = 0;
      c++;
    }

    if (c == 10) {
      c = 0;
      b++;
    }

    if (b == 10) {
      b = 0;
      a++;
    }

    w = a * 100000000 + b * 10000000 + c * 1000000 + d * 100000 + e * 10000 +
        d * 1000 + c * 100 + b * 10 + a;
    while (w % 10 == 0) {
      w = w / 10;
    }
    if (w >= m && w < n) {
      if (Prime(w)) {
        printf("%ld\n", w);
        if (w > 5 && w < 100) {
          printf("11\n");
        }
      }
    }
  }
  return 0;
}

[Answer 6:]

#include <math.h>
#include <stdio.h>
int huiwen(int n);
int sushu(int n);
int main() {
  int a, b;
  scanf("%d %d", &a, &b);
  int i;
  for (i = a; i <= b; i++) {
    if (huiwen(i) == 1 && sushu(i) == 1)
      printf("%d\n", i);
  }
}
int huiwen(int n) {
  int m = n, sum = 0;
  while (m) {
    sum = sum * 10 + m % 10;
    m /= 10;
  }
  if (sum == n)
    return 1;
  else
    return 0;
}
int sushu(int n) {
  int i, find = 0;
  for (i = 2; i <= sqrt(n) && !find; i++) {
    if (n % i == 0)
      find = 1;
  }
  if (find == 1)
    return 0;
  else
    return 1;
}

[Answer 7:]

#include <stdio.h>
int fun(int a);
int main() {
  int a, b, c, d, e, f;
  scanf("%d %d", &e, &f);
  printf("5\n7\n11\n");
  for (a = e; a < f; a++) {
    b = a % 10;
    c = a / 100;
    d = fun(a);
    if (b == c && d == 1)
      printf("%d\n", a);
  }
}
int fun(int a) {
  int i;
  for (i = 2; i <= a / 2; i++)
    if (a % i == 0)
      return 0;
  return 1;
}

[Answer 8:]

#include <math.h>
#include <stdio.h>
int hw(int n) //判断回文数
{
  int t, r = 0;
  for (t = n; t; t /= 10) //把n从个位到最高位取反
    r = r * 10 + t % 10;
  return r == n;
}
int ss(int n) //判断素数
{
  int i;
  for (i = 2; i <= sqrt(n); i++) //从2到n的平方根判断能否被n整除
    if (n % i == 0)
      return 0;
  return 1;
}
void main() {
  int i, c = 0;
  int x, y;
  scanf("%d %d", &x, &y);
  for (i = x; i < y; i++)
    if (hw(i) && ss(i)) {
      printf("%d\n", i);
    }
}

[Answer 9:]

#include "stdlib.h"
#include "string.h"
#include <math.h>
#include <stdio.h>
int su(long int a) {
  long int i, s;
  s = sqrt(a);
  for (i = 2; i <= s; i++)
    if (a % i == 0)
      break;
  if (i > s)
    return 1;
  else
    return 0;
}
int hui(long int a) {
  int i, len, half;
  char str[20];
  ltoa(a, str, 10); /* 转化为字符串 */
  len = strlen(str);
  half = len >> 1;
  for (i = 0; i < half; i++) {
    if (str[i] != str[len - i - 1])
      return 0;
  }
  return 1;
}
void main() {
  long int a, s, i;
  scanf("%ld%ld", &a, &s);
  for (i = a; i <= s; i++)
    if (hui(i) && su(i))
      printf("%ld\n", i);
}

[Answer 10:]

#include <math.h>
#include <stdio.h>

// Judge if the palindromes that have been found are primes
int primer(int number) {
  int i;
  int sqrt_number;
  sqrt_number = sqrt(number);
  for (i = 2; i <= sqrt_number; i++) {
    if ((number % i) == 0)
      return 0; // The number is not prime
  }
  return 1; // The number is prime
}

int huiwen(int number) {
  int g, s, b;
  g = number % 10;
  s = number / 10 % 10;
  b = number / 100;
  if (number >= 10 && number < 100) {
    if (g != s)
      return 0;
  } // The number is not huiwen
  else if (number >= 100 && number < 1000) {
    if (g != b)
      return 0;
  }         // The number is not huiwen
  return 1; // The number is huiwen
}
int main() {
  int a, b; // Enter two numbers as the range of prime palindromes
  int i;

  scanf("%d %d", &a, &b);

  for (i = a; i <= b; i++) {
    if (primer(i) && huiwen(i))
      printf("%d\n", i);
  }
  return 0;
}


[10 answers found]