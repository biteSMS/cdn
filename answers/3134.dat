[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
#define N 30
main() {
  int n, i, j, temp1, temp2, choice, p, mark;
  long ids;
  float sum;
  printf("Input student number(n<30):\n");
  while (scanf("%d", &n)) {
    if (n < 30 && n > 0)
      break;
    else {
      printf("Invalid Input!");
      continue;
    }
  }
  long id[N];
  float score[N];
Choice:
  printf("Management for Students' scores\n");
  printf("1.Input record\n");
  printf("2.Caculate total and average score of course\n");
  printf("3.Sort in descending order by score\n");
  printf("4.Sort in ascending order by number\n");
  printf("5.Search by number\n");
  printf("6.Statistic analysis\n");
  printf("7.List record\n");
  printf("0.Exit\n");
  printf("Please Input your choice:\n");
  scanf("%d", &choice);
  getchar();
  switch (choice) {
  case 1:
    goto a;
  case 2:
    goto b;
  case 3:
    goto c;
  case 4:
    goto d;
  case 5:
    goto e;
  case 6:
    goto f;
  case 7:
    goto g;
  case 0:
    goto end;
  default:
    printf("Input error!\n");
    goto Choice;
  }
a:
  printf("Input student's ID, name and score:\n");
  for (i = 1; i <= n; i++) {
    scanf("%ld %f", &id[i], &score[i]);
    getchar();
  }
  goto Choice;
b:
  sum = 0;
  for (i = 1; i <= n; i++)
    sum = sum + score[i];
  printf("sum=%.0f,aver=%.2f\n", sum, sum / n);
  goto Choice;
c:
  printf("Sort in descending order by score:\n");
  for (i = 1; i < n; i++)
    for (j = i + 1; j <= n; j++)
      if (score[j] > score[i]) {
        temp1 = score[i], temp2 = id[i];
        score[i] = score[j], id[i] = id[j];
        score[j] = temp1, id[j] = temp2;
      }
  for (i = 1; i <= n; i++)
    printf("%ld\t%.0f\n", id[i], score[i]);
  goto Choice;
d:
  printf("Sort in ascending order by number:\n");
  for (i = 1; i < n; i++)
    for (j = i + 1; j <= n; j++)
      if (id[i] > id[j]) {
        temp1 = score[i], temp2 = id[i];
        score[i] = score[j], id[i] = id[j];
        score[j] = temp1, id[j] = temp2;
      }
  for (i = 1; i <= n; i++)
    printf("%ld\t%.0f\n", id[i], score[i]);
  goto Choice;
e:
  printf("Input the number you want to search:\n");
  scanf("%ld", &ids);
  getchar();
  for (i = 1; i <= n; i++) {
    if (ids == id[i]) {
      printf("%ld\t%.0f\n", id[i], score[i]);
      goto Choice;
    } else
      continue;
  }
  printf("Not found!\n");
  goto Choice;
f:
  for (i = 5; i <= 10; i++) {
    p = 0;
    for (j = 1; j <= n; j++) {
      mark = score[j] < 60 ? 5 : (int)score[j] / 10;
      if (mark == i)
        p++;
    }
    if (i == 5) {
      printf("<60\t%d\t%.2f%%\n", p, (float)p / n * 100);
      continue;
    } else if (i >= 6 && i <= 9) {
      printf("%d-%d\t%d\t%.2f%%\n", i * 10, i * 10 + 9, p, (float)p / n * 100);
      continue;
    } else
      printf("%d\t%d\t%.2f%%\n", i * 10, p, (float)p / n * 100);
  }
  goto Choice;
g:
  for (i = 1; i <= n; i++)
    printf("%ld\t%.0f\n", id[i], score[i]);
  goto Choice;
end:
  printf("End of program!\n");
  return 0;
}

[Answer 2:]

#include <stdio.h>
#define N 30
void second(float score[], double *sum, double *aver, int n);
void third(long num[], float score[], int n);
void forth(long num[], float score[], int n);
void fifth(long num[], float score[], int n);
void sixth(float score[], int n);
void seventh(long num[], float score[], int n);
int main() {
  int n, a, i;
  double sum, aver;
  long num[N];
  float score[N];
  printf("Input student number(n<30):\n");
  scanf("%d", &n);
a:
  printf("Management for Students' scores\n"
         "1.Input record\n"
         "2.Caculate total and average score of course\n"
         "3.Sort in descending order by score\n"
         "4.Sort in ascending order by number\n"
         "5.Search by number\n"
         "6.Statistic analysis\n"
         "7.List record\n"
         "0.Exit\n"
         "Please Input your choice:\n");
  scanf("%d", &a);
  if (a == 1) {
    printf("Input student's ID, name and score:\n");
    for (i = 0; i < n; i++) {
      scanf("%ld%f", &num[i], &score[i]);
    }
    goto a;
  } else if (a == 2) {
    second(score, &sum, &aver, n);
    printf("sum=%.0f,aver=%.2f\n", sum, aver);
    goto a;
  } else if (a == 3) {
    third(num, score, n);
    goto a;
  } else if (a == 4) {
    forth(num, score, n);
    goto a;
  } else if (a == 5) {
    fifth(num, score, n);
    goto a;
  } else if (a == 6) {
    sixth(score, n);
    goto a;
  } else if (a == 7) {
    seventh(num, score, n);
    goto a;
  } else if (a == 0) {
    printf("End of program!\n");
  } else {
    printf("Input error!\n");
    goto a;
  }
  return 0;
}
void second(float score[], double *sum, double *aver, int n) {
  *sum = 0;
  *aver = 0;
  int i;
  for (i = 0; i < n; i++) {
    *sum += score[i];
  }
  *aver = *sum / n;
}
void third(long num[], float score[], int n) {
  int i, j, temp1;
  long temp2;
  for (i = 0; i < n - 1; i++) {

    for (j = i + 1; j < n; j++) {
      if (score[j] > score[i]) {
        temp1 = score[j];
        score[j] = score[i];
        score[i] = temp1;
        temp2 = num[j];
        num[j] = num[i];
        num[i] = temp2;
      }
    }
  }
  printf("Sort in descending order by score:\n");
  for (i = 0; i < n; i++) {
    printf("%ld\t%.0f\n", num[i], score[i]);
  }
}
void forth(long num[], float score[], int n) {
  int i, j, temp1;
  long temp2;
  for (i = 0; i < n - 1; i++) {

    for (j = i + 1; j < n; j++) {
      if (num[j] < num[i]) {
        temp1 = score[j];
        score[j] = score[i];
        score[i] = temp1;
        temp2 = num[j];
        num[j] = num[i];
        num[i] = temp2;
      }
    }
  }
  printf("Sort in ascending order by number:\n");
  for (i = 0; i < n; i++) {
    printf("%ld\t%.0f\n", num[i], score[i]);
  }
}
void fifth(long num[], float score[], int n) {
  long a;
  int i;
  printf("Input the number you want to search:\n");
  scanf("%ld", &a);
  for (i = 0; i < n; i++) {
    if (num[i] == a) {
      printf("%ld\t%.0f\n", num[i], score[i]);
      break;
    }
  }
  if (num[i] != a)
    printf("Not found!\n");
}
void sixth(float score[], int n) {
  int i, a = 0, b = 0, c = 0, d = 0, e = 0, f = 0;

  for (i = 0; i < n; i++) {
    if (score[i] < 60)
      a++;
    if (score[i] <= 69 && score[i] >= 60)
      b++;
    if (score[i] <= 79 && score[i] >= 70)
      c++;
    if (score[i] <= 89 && score[i] >= 80)
      d++;
    if (score[i] <= 99 && score[i] >= 90)
      e++;
    if (score[i] == 100)
      f++;
  }
  printf("<60\t%d\t%.2f%%\n", a, (float)a / n * 100);
  printf("%d-%d\t%d\t%.2f%%\n", 60, 69, b, (float)b / n * 100);
  printf("%d-%d\t%d\t%.2f%%\n", 70, 79, c, (float)c / n * 100);
  printf("%d-%d\t%d\t%.2f%%\n", 80, 89, d, (float)d / n * 100);
  printf("%d-%d\t%d\t%.2f%%\n", 90, 99, e, (float)e / n * 100);
  printf("%d\t%d\t%.2f%%\n", 100, f, (float)f / n * 100);
}
void seventh(long num[], float score[], int n) {
  int i, j, temp1;
  long temp2;
  for (i = 0; i < n - 1; i++) {

    for (j = i + 1; j < n; j++) {
      if (num[j] < num[i]) {
        temp1 = score[j];
        score[j] = score[i];
        score[i] = temp1;
        temp2 = num[j];
        num[j] = num[i];
        num[i] = temp2;
      }
    }
  }
  for (i = 0; i < n; i++) {
    printf("%ld\t%.0f\n", num[i], score[i]);
  }
}

[Answer 3:]

#include <stdio.h>
#include <stdlib.h>
int Menu(void);
void ReadScore(long ID[], float score[], int n);
void Sumofstudent(long ID[], float score[], int n);
void SortbyScore(long ID[], float score[], int n);
void SortbyNum(long ID[], float score[], int n);
void SearchbyNum(long ID[], float score[], int n);
void StatisticAnalysis(float score[], int n);
void PrintScore(long ID[], float score[], int n);
#define STU_NUM 29
int main() {
  int ch;
  int n = 0;
  float score[STU_NUM];
  long ID[STU_NUM];

  printf("Input student number(n<30):\n");
  scanf("%d", &n);
  while (1) {
    ch = Menu();
    switch (ch) {
    case 1:
      printf("Input student's ID, name and score:\n");

      ReadScore(ID, score, n);
      break;
    case 2:
      Sumofstudent(ID, score, n);
      break;
    case 3:
      SortbyScore(ID, score, n);

      printf("Sort in descending order by score:\n");

      PrintScore(ID, score, n);
      break;
    case 4:

      SortbyNum(ID, score, n);
      printf("Sort in ascending order by number:\n");
      PrintScore(ID, score, n);
      break;
    case 5:
      SearchbyNum(ID, score, n);

      break;
    case 6:
      StatisticAnalysis(score, n);

      break;
    case 7:
      PrintScore(ID, score, n);

      break;

    case 0:
      printf("End of program!");
      exit(0);
    default:
      printf("Input error!\n");
    }
  }
  return 0;
}
int Menu(void) {
  int n;
  printf("Management for Students' scores\n");
  printf("1.Input record\n");
  printf("2.Caculate total and average score of course\n");
  printf("3.Sort in descending order by score\n");
  printf("4.Sort in ascending order by number\n");
  printf("5.Search by number\n");
  printf("6.Statistic analysis\n");
  printf("7.List record\n");
  printf("0.Exit\n");
  printf("Please Input your choice:\n");
  scanf("%d", &n);
  return n;
}
void ReadScore(long ID[], float score[], int n) {
  int i;

  for (i = 0; i < n; i++) {
    scanf("%ld%f", &ID[i], &score[i]);
  }
}
void Sumofstudent(long ID[], float score[], int n) {
  int i;
  float sum = 0;
  for (i = 0; i < n; i++) {
    sum = sum + score[i];
  }
  printf("sum=%.0f,aver=%.2f\n", sum, sum / n);
}
void SortbyScore(long ID[], float score[], int n) {
  int i, j, k;
  float t;
  long c;
  for (i = 0; i < n - 1; i++) {
    k = i;
    for (j = i; j < n; j++) {
      if (score[k] < score[j])
        k = j;
    }
    if (k != i) {
      t = score[k];
      score[k] = score[i];
      score[i] = t;
      c = ID[k];
      ID[k] = ID[i];
      ID[i] = c;
    }
  }
}
void SortbyNum(long ID[], float score[], int n) {
  int i, j, k;
  float t;
  long c;
  for (i = 0; i < n - 1; i++) {
    k = i;
    for (j = i; j < n; j++) {
      if (ID[k] > ID[j])
        k = j;
    }
    if (k != i) {
      t = score[k];
      score[k] = score[i];
      score[i] = t;
      c = ID[k];
      ID[k] = ID[i];
      ID[i] = c;
    }
  }
}
void StatisticAnalysis(float score[], int n) {
  int i, j;
  int count[6];

  for (i = 0; i < 6; i++)
    count[i] = 0;

  for (j = 0; j < n; j++) {
    if (score[j] < 60)
      count[0]++;
    else if (score[j] >= 60 && score[j] <= 69)
      count[1]++;
    else if (score[j] >= 70 && score[j] <= 79)
      count[2]++;
    else if (score[j] >= 80 && score[j] <= 89)
      count[3]++;
    else if (score[j] >= 90 && score[j] <= 99)
      count[4]++;
    else
      count[5]++;
  }

  printf("<60\t%d\t%.2f%%\n", count[0], 100 * count[0] / (float)n);
  printf("%d-%d\t%d\t%.2f%%\n", 60, 69, count[1], 100 * count[1] / (float)n);
  printf("%d-%d\t%d\t%.2f%%\n", 70, 79, count[2], 100 * count[2] / (float)n);
  printf("%d-%d\t%d\t%.2f%%\n", 80, 89, count[3], 100 * count[3] / (float)n);
  printf("%d-%d\t%d\t%.2f%%\n", 90, 99, count[4], 100 * count[4] / (float)n);
  printf("%d\t%d\t%.2f%%\n", 100, count[5], 100 * count[5] / (float)n);
}
void SearchbyNum(long ID[], float score[], int n) {
  long x;
  int i;
  int flag = 0;
  printf("Input the number you want to search:\n");
  scanf("%ld", &x);
  for (i = 0; i < n; i++) {
    if (ID[i] == x) {
      flag = 1;
      printf("%ld\t%.0f\n", ID[i], score[i]);

      break;
    }
  }
  if (flag == 0)
    printf("Not found!\n");
}
void PrintScore(long ID[], float score[], int n) {
  int i;
  for (i = 0; i < n; i++) {
    printf("%ld\t%.0f\n", ID[i], score[i]);
  }
}


[3 answers found]