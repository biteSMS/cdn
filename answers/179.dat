[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
int MyStrcmp(char s[], char t[]) {
  int i, k = 0;
  for (i = 0; s[i] != '\0'; i++) {
    if (s[i] > t[i]) {
      k = 1;
      break;
    }
    if (s[i] < t[i]) {
      k = -1;
      break;
    }
  }
  return k;
}
int main() {
  const int n = 100;
  char s[n], t[n];
  int k = 0;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  k = MyStrcmp(s, t);
  if (k > 0)
    printf("string s>string t.\n");
  if (k < 0)
    printf("string s<string t.\n");
  if (k == 0)
    printf("string s=string t.\n");
  return 0;
}

[Answer 2:]

#include <stdio.h>
#include <string.h>

int MyStrcmp(char s[], char t[]) {
  int i, count;
  for (i = 0; s[i] == t[i] && (i < strlen(s) && i < strlen(t)); i++)
    ;
  count = s[i] - t[i];
  return count;
}

int main() {
  const int size = 80;
  char s[size], t[size];
  int count;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  count = MyStrcmp(s, t);
  if (count > 0)
    printf("string s>string t.\n");
  else if (count < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
  return 0;
}

[Answer 3:]

#include <stdio.h>
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] != '\0' && t[i] != '\0'; i++) {
    if (s[i] != t[i])
      return s[i] - t[i];
  }
  return 0;
}
int main() {
  char s[256], t[256];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  if (MyStrcmp(s, t) < 0)
    printf("string s<string t.\n");
  else if (MyStrcmp(s, t) == 0)
    printf("string s=string t.\n");
  else
    printf("string s>string t.\n");
  return 0;
}

[Answer 4:]

#include <stdio.h>
#include <stdlib.h>
int MyStrcmp(char *p, char *pr) {
  int i;
  for (i = 0; p[i] != '\0' || pr[i] != '\0'; i++) {
    if (p[i] != pr[i]) {
      break;
    }
  }
  return p[i] - pr[i];
}
int main() {
  int Return;
  char str1[100], str2[100];
  printf("Input s\n");
  gets(str1);
  printf("Input t\n");
  gets(str2);
  Return = MyStrcmp(str1, str2);
  if (Return == 0) {
    printf("string s=string t.\n");
  } else if (Return > 0) {
    printf("string s>string t.\n");
  } else {
    printf("string s<string t.\n");
  }
  return 0;
}

[Answer 5:]

#include <stdio.h>
int MyStrcmp(char s[], char t[]) {
  int i, flag = 0;
  for (i = 0; s[i] != 0 && t[i] != 0; i++) {
    if (s[i] - t[i] != 0) {
      flag = s[i] - t[i];
      break;
    }
  }
  return flag;
}
int main() {
  char s[50], t[50];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  int flag = MyStrcmp(s, t);
  if (flag > 0)
    printf("string s>string t.\n");
  else if (flag == 0)
    printf("string s=string t.\n");
  else
    printf("string s<string t.\n");
}

[Answer 6:]

#include <stdio.h>
#include <stdlib.h>

int MyStrcmp(char s[], char t[]) {
  int i = 0;
  while (s[i] != '\0' && t[i] != '\0') {
    if (s[i] != t[i]) {
      return s[i] - t[i];
    }
    i++;
  }
  return 0;
}

int main() {
  char s[80], t[80];
  int flag;

  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);

  flag = MyStrcmp(s, t);
  if (flag > 0) {
    printf("string s>string t.\n");
  } else if (flag < 0) {
    printf("string s<string t.\n");
  } else {
    printf("string s=string t.\n");
  }

  return 0;
}

[Answer 7:]

#include <stdio.h>
#define ARR_SIZE 80
int MyStrcmp(char s[], char t[]);
int main() {
  char s[ARR_SIZE], t[ARR_SIZE];
  int c;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  c = MyStrcmp(s, t);
  if (c > 0)
    printf("string s>string t.\n");
  else if (c < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
}

int MyStrcmp(char s[], char t[]) {
  int i = 0;
  for (i = 0; s[i] != '\0', t[i] != '\0'; i++) {
    if (s[i] > t[i])
      return 1;
    if (s[i] < t[i])
      return -1;
  }
  return 0;
}

[Answer 8:]

#include <stdio.h>
int MyStrcmp(char s[], char t[]);
int main() {
  char s[80], t[80];
  int ret;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  ret = MyStrcmp(s, t);
  if (ret > 0) {
    printf("string s>string t.\n");
  }
  if (ret < 0) {
    printf("string s<string t.\n");
  }
  if (ret == 0) {
    printf("string s=string t.\n");
  }
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i, a;
  for (i = 0; i < 80; i++) {
    if (s[i] != t[i]) {
      a = s[i] - t[i];
      return a;
    }
  }
}

[Answer 9:]

#include <stdio.h>
#define N 80
int MyStrcmp(char s[], char t[]);
int main() {
  int ret;
  char s[N], t[N];
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  ret = MyStrcmp(s, t);
  if (!ret) {
    printf("string s=string t.\n");
  }
  if (ret > 0) {
    printf("string s>string t.\n");
  }
  if (ret < 0) {
    printf("string s<string t.\n");
  }
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] == t[i]; i++) {
    if ((s[i] == 0) || (t[i] == 0)) {
      return 0;
    }
  }
  return s[i] - t[i];
}


[9 answers found]