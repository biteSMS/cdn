[Answer 1:]

#include <stdio.h>
#define MAX_LEN 80
#define N 150
void SortString(char *ptr[], int n);
main() {
  int i, n;
  char *pStr[N];
  char name[N][MAX_LEN];
  printf("How many countries?\n");
  scanf("%d", &n);
  getchar();
  printf("Input their names:\n");
  for (i = 0; i < n; i++) {
    pStr[i] = name[i];
    scanf("%s", pStr[i]);
  }
  SortString(pStr, n);
  printf("Sorted results:\n");
  for (i = 0; i < n; i++) {
    puts(pStr[i]);
  }
}

void SortString(char *ptr[], int n) {
  int i, j;
  char *temp = NULL;
  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (strcmp(ptr[j], ptr[i]) < 0) {
        temp = ptr[i];
        ptr[i] = ptr[j];
        ptr[j] = temp;
      }
    }
  }
}

[Answer 2:]

#include <stdio.h>
#include <string.h>
#define MAX_LEN 80
#define N 150
void SortString(char *ptr[], int n);
main() {
  int i, n;
  char *pStr[N], str[N][MAX_LEN];

  printf("How many countries?\n");
  scanf("%d", &n);

  for (i = 0; i < N; i++)
    pStr[i] = str[i];

  printf("Input their names:\n");
  for (i = 0; i < n; i++) {
    scanf("%s", pStr[i]);
  }

  SortString(pStr, n);

  printf("Sorted results:\n");
  for (i = 0; i < n; i++) {
    puts(pStr[i]);
  }
}
void SortString(char *ptr[], int n) {
  int i, j;
  char *temp;

  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (strcmp(ptr[j], ptr[i]) < 0) {
        temp = ptr[i];
        ptr[i] = ptr[j];
        ptr[j] = temp;
      }
    }
  }
}

[Answer 3:]

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define N 80
void sortstring(char *p[], int n) {
  int i, j;
  char *temp = NULL;
  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (strcmp(p[j], p[i]) < 0) {
        temp = p[i];
        p[i] = p[j];
        p[j] = temp;
      }
    }
  }
}
int main() {
  int i;
  int n;
  char name[10][N];
  char *p[10];
  printf("How many countries?\n");
  scanf("%d", &n);
  getchar();
  printf("Input their names:\n");

  for (i = 0; i < n; i++) {
    p[i] = name[i];
    gets(p[i]);
  }
  sortstring(p, n);
  printf("Sorted results:\n");
  for (i = 0; i < n; i++) {
    puts(p[i]);
  }
  return 0;
}

[Answer 4:]

#include <stdio.h>
#include <string.h>
#define MAX_LEN 80
#define N 150
void SortString(char *ptr[], int n);
main() {
  int i, n;
  char name[N][MAX_LEN];
  char *pStr[N];
  printf("How many countries?\n");
  scanf("%d", &n);
  getchar();
  printf("Input their names:\n");
  for (i = 0; i < n; i++) {
    pStr[i] = name[i];
    gets(pStr[i]);
  }
  SortString(pStr, n);
  printf("Sorted results:\n");
  for (i = 0; i < n; i++) {
    puts(pStr[i]);
  }
}
void SortString(char *ptr[], int n) {
  int i, j;
  char *temp = NULL;
  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (strcmp(ptr[j], ptr[i]) < 0) {
        temp = ptr[i];
        ptr[i] = ptr[j];
        ptr[j] = temp;
      }
    }
  }
}

[Answer 5:]

#include <stdio.h>
#define MAX_LEN 80
#define N 150
void SortString(char *ptr[N], int n);
main() {
  int i, n;
  char pStr[N][MAX_LEN];
  printf("How many countries?\n");
  scanf("%d", &n);
  printf("Input their names:\n");
  for (i = 0; i < n; i++) {
    scanf("%s", pStr[i]);
  }
  char *ptr[N];
  for (i = 0; i < n; i++)
    ptr[i] = pStr[i];
  SortString(ptr, n);
}

void SortString(char *ptr[N], int n) {
  int i, j;
  char *temp;
  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (strcmp(ptr[j], ptr[i]) < 0) {

        temp = ptr[j];
        ptr[j] = ptr[i];
        ptr[i] = temp;
      }
    }
  }
  printf("Sorted results:\n");
  for (i = 0; i < n; i++) {
    puts(ptr[i]);
  }
}

[Answer 6:]

#include <stdio.h>
#include <string.h>
#define MAX_LEN 80
#define N 150
void SortString(char *ptr[], int n);
main() {
  int i, n;
  char *pStr[N];
  char name[N][MAX_LEN];
  printf("How many countries?\n");
  scanf("%d", &n);
  getchar();
  printf("Input their names:\n");
  for (i = 0; i < n; i++) {
    pStr[i] = name[i];
    gets(pStr[i]);
  }
  SortString(pStr, n);
  printf("Sorted results:\n");
  for (i = 0; i < n; i++) {
    puts(pStr[i]);
  }
}

void SortString(char *ptr[], int n) {
  int i, j;
  char *temp = NULL;
  for (i = 0; i < n - 1; i++) {
    for (j = i + 1; j < n; j++) {
      if (strcmp(ptr[j], ptr[i]) < 0) //交换指向字符串的指针
      {
        temp = ptr[i];
        ptr[i] = ptr[j];
        ptr[j] = temp;
      }
    }
  }
}


[6 answers found]