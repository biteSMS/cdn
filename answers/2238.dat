[Answer 1:]

#include <stdio.h>
#include <string.h>
/*
* 用visit数组标记1-9这9个数字是否全部用完，且不重复
* 只有当他们全部用完且不重复使用时，和才为9，这样就
*满足条件了
*/
int main() {
  int i, j, k, x;
  int visit[10], sum = 0;
  for (i = 123; i * 3 <= 987; i++) {
    memset(visit, 0, sizeof(int) * 10);
    visit[i / 100] = 1;
    visit[i / 10 % 10] = 1;
    visit[i % 10] = 1;
    j = i * 2;
    visit[j / 100] = 1;
    visit[j / 10 % 10] = 1;
    visit[j % 10] = 1;
    k = i * 3;
    visit[k / 100] = 1;
    visit[k / 10 % 10] = 1;
    visit[k % 10] = 1;
    sum = 0;
    for (x = 1; x <= 9; x++)
      sum += visit[x];
    if (sum == 9)
      printf("%d,%d,%d\n", i, j, k);
  }
  return 0;
}

[Answer 2:]

#include <stdio.h>
int a[10];
void f(int n) {
  while (n) {
    ++a[n % 10];
    n /= 10;
  }
}
int main() {
  int n, i, r;
  for (n = 100; n < 400; ++n) {
    for (i = 1; i <= 9; ++i)
      a[i] = 0;
    f(n);
    f(2 * n);
    f(3 * n);
    r = 1;
    for (i = 1; i <= 9; ++i)
      r *= a[i];
    if (r == 1)
      printf("%d,%d,%d\n", n, 2 * n, 3 * n);
  }
  return 0;
}

[Answer 3:]

#include <stdio.h>
int array[9]; //存储三个三位数各个位的全局数组
int OK(int m, int *array);
int main() {
  int m;
  int count = 1;
  for (m = 123; m < 333; m++) {
    if (OK(m, array) && OK(2 * m, array + 3) &&
        OK(3 * m,
           array + 6)) //第二个数从array[3]开始存，第三个数从array[6]开始存。
    {
      printf("%d,%d,%d\n", m, 2 * m, 3 * m);
      count++;
    }
  }
  return 0;
}

int OK(
    int number,
    int *
        curPtr) // 判断number这个数中各个位上的数字在之前是否出现过，curPtr是指向该数字开始存储的位置
{
  int *i, *j;
  for (i = curPtr; i < curPtr + 3; i++) {
    *i = number % 10;
    number /= 10;
    if ((*i) == 0)
      return 0; //判断输入的数字是否为0，为0则必不满足，返回0
    for (j = array; j < i; j++) {
      if ((*i) == (*j))
        return 0; //只要输入的数字和前面某一个数字相同，则不满足
    }
  }
  return 1;
}

[Answer 4:]

#include <stdio.h>
int array[9]; //存储三个三位数各个位的全局数组
int OK(int m, int *array);
int main() {
  int m;
  int count = 1;
  for (m = 123; m < 333; m++) {
    if (OK(m, array) && OK(2 * m, array + 3) &&
        OK(3 * m,
           array + 6)) //第二个数从array[3]开始存，第三个数从array[6]开始存。
    {
      printf("%d,%d,%d\n", m, 2 * m, 3 * m);
      count++;
    }
  }
  return 0;
}

int OK(
    int number,
    int *
        curPtr) // 判断number这个数中各个位上的数字在之前是否出现过，curPtr是指向该数字开始存储的位置
{
  int *i, *j;
  for (i = curPtr; i < curPtr + 3; i++) {
    *i = number % 10;
    number /= 10;
    if ((*i) == 0)
      return 0; //判断输入的数字是否为0，为0则必不满足，返回0
    for (j = array; j < i; j++) {
      if ((*i) == (*j))
        return 0; //只要输入的数字和前面某一个数字相同，则不满足
    }
  }
  return 1;
}

[Answer 5:]

#include <stdio.h>
#include <string.h>
/*
* 用visit数组标记1-9这9个数字是否全部用完，且不重复
* 只有当他们全部用完且不重复使用时，和才为9，这样就
*满足条件了
*/
int main() {
  int i, j, k, x;
  int visit[10], sum = 0;
  for (i = 123; i * 3 <= 987; i++) {
    memset(visit, 0, sizeof(int) * 10);
    visit[i / 100] = 1;
    visit[i / 10 % 10] = 1;
    visit[i % 10] = 1;
    j = i * 2;
    visit[j / 100] = 1;
    visit[j / 10 % 10] = 1;
    visit[j % 10] = 1;
    k = i * 3;
    visit[k / 100] = 1;
    visit[k / 10 % 10] = 1;
    visit[k % 10] = 1;
    sum = 0;
    for (x = 1; x <= 9; x++)
      sum += visit[x];
    if (sum == 9)
      printf("%d,%d,%d\n", i, j, k);
  }
  return 0;
}

[Answer 6:]

#include <stdio.h>
main() {
  int a, b, c, d, e, f, g, h, i, s1, s2, s3, k1, k2, k3;
  for (a = 1; a < 4; a++)
    for (b = 1; b < 10; b++)
      if (a != b)
        for (c = 1; c < 10; c++)
          if (c != a && c != b)
            for (d = 2; d < 7; d++)
              if (d != a && d != b && d != c)
                for (e = 1; e < 10; e++)
                  if (e != a && e != b && e != c && e != d)
                    for (f = 1; f < 10; f++)
                      if (f != a && f != b && f != c && f != d && f != e)
                        for (g = 3; g < 10; g++)
                          if (g != a && g != b && g != c && g != d && g != e &&
                              g != f)
                            for (h = 1; h < 10; h++)
                              if (h != a && h != b && h != c && h != d &&
                                  h != e && h != f && h != g)
                                for (i = 1; i < 10; i++)
                                  if (i != a && i != b && i != c && i != d &&
                                      i != e && i != f && i != g && i != h) {
                                    s1 = a * 100 + b * 10 + c;
                                    s2 = d * 100 + e * 10 + f;
                                    s3 = g * 100 + h * 10 + i;
                                    if (s1 * 2 == s2 && s1 * 3 == s3)
                                      printf("%d,%d,%d\n", s1, s2, s3);
                                  }
}

[Answer 7:]

#include <stdio.h>
void main() {
  printf("192,384,576\n");

  printf("219,438,657\n");
  printf("273,546,819\n");
  printf("327,654,981\n");
}


[7 answers found]