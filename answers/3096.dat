[Answer 1:]

#include <stdio.h>
int FindMax(int num[], int n,
            int *pMaxPos); //函数返回最大值，pMaxPos返回最大值所在的下标
int FindMin(int num[], int n,
            int *pMinPos); //函数返回最小值，pMaxPos返回最小值所在的下标
#define N 10
int main() {
  int a[N], i, minpos, maxpos, min, max;
  printf("Input 10 numbers:\n");
  for (i = 0; i < N; i++) {
    scanf("%d", &a[i]);
  }
  max = FindMax(a, N, &maxpos);
  min = FindMin(a, N, &minpos);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", max, maxpos, min, minpos);
  return 0;
}
int FindMax(int num[], int n, int *pMaxPos) {
  int i, max;
  max = num[0];
  for (i = 0; i < n; i++) {
    if (num[i] >= max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}
int FindMin(int num[], int n, int *pMinPos) {
  int i, min;
  min = num[0];
  for (i = 0; i < n; i++) {
    if (num[i] <= min) {
      min = num[i];
      *pMinPos = i;
    }
  }
  return min;
}

[Answer 2:]

#include <stdio.h>
int FindMax(int *num, int *pMaxPos) {
  int i = 0;
  for (i = 0; i < 10; i++) {
    if (*(num + *pMaxPos) < *(num + i))
      *pMaxPos = i;
  }
  return 0;
}
int FindMin(int *num, int *pMinPos) {
  int i = 0;
  for (i = 0; i < 10; i++) {
    if (*(num + *pMinPos) > *(num + i))
      *pMinPos = i;
  }
  return 0;
}
int main() {
  int num[10];
  int pMaxPos = 0, pMinPos = 0;
  int i;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++) {
    scanf("%d", &num[i]);
  }
  FindMax(num, &pMaxPos);
  FindMin(num, &pMinPos);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", num[pMaxPos], pMaxPos,
         num[pMinPos], pMinPos);
}

[Answer 3:]

#include <stdio.h>
static int x, b;
void find(int *a, int *p, int *q) {
  int i;
  *p = *q = a[0];
  for (i = 1; i < 10; i++)
    if (*p > a[i])
      *p = a[i], x = i;
    else if (*q < a[i])
      *q = a[i], b = i;
}
int main() {
  int i, a[10], max, min;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++)
    scanf("%d", &a[i]);
  find(a, &max, &min);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", min, b, max, x);
  getchar();
  return 0;
}

[Answer 4:]

#include <stdio.h>
#include <stdlib.h>
int FindMax(int num[], int n, int *pMaxPos) {
  int max, i = 0, j = 0;
  *pMaxPos = i;
  max = num[i];
  for (i = 0; i < n; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}
int FindMin(int num[], int n, int *pMinPos) {
  int min, i = 0, j = 0;
  *pMinPos = i;
  min = num[i];
  for (i = 0; i < n; i++) {
    if (num[i] < min) {
      min = num[i];
      *pMinPos = i;
    }
  }
  return min;
}
int main() {
  int i = 0, num[10];
  int max, min;
  int ret1, ret2;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++) {
    scanf("%d", &num[i]);
  }
  ret1 = FindMax(num, 10, &max);
  ret2 = FindMin(num, 10, &min);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", ret1, max, ret2, min);

  return 0;
}

[Answer 5:]

#include <stdio.h>
int FindMax(int num[], int n, int *pMaxPos);
int FindMin(int num[], int n, int *pMinPos);
int main() {
  int a[10], i, maxpos, minpos, max, min;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++) {
    scanf("%d", &a[i]);
  }
  max = FindMax(a, 10, &maxpos);
  min = FindMin(a, 10, &minpos);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", max, maxpos, min, minpos);
  return 0;
}
int FindMax(int num[], int n, int *pMaxPos) {
  int max = num[0], i;
  *pMaxPos = 0;
  for (i = 0; i < n; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}
int FindMin(int num[], int n, int *pMinPos) {
  int min = num[0], i;
  *pMinPos = 0;
  for (i = 0; i < n; i++) {
    if (num[i] < min) {
      min = num[i];
      *pMinPos = i;
    }
  }
  return min;
}

[Answer 6:]

#include <stdio.h>
int Findmax(int *a, int *p) {
  int i;
  *p = 0;
  for (i = 1; i < 10; i++)
    if (*(a + *p) < *(a + i))
      *p = i;
  return 0;
}
int Findmin(int *a, int *p) {
  int i;
  *p = 0;
  for (i = 1; i < 10; i++)
    if (*(a + *p) > *(a + i))
      *p = i;
  return 0;
}
int main() {
  int a[10], maxp, minp, i;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++)
    scanf("%d", a + i);
  Findmax(a, &maxp);
  Findmin(a, &minp);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", a[maxp], maxp, a[minp],
         minp);
  return 0;
}

[Answer 7:]

#include <stdio.h>
int FindMax(int num[], int n,
            int *pMaxPos); //函数返回最大值，pMaxPos返回最大值所在的下标
int FindMin(int num[], int n,
            int *pMinPos); //函数返回最小值，pMaxPos返回最小值所在的下标
int main() {
  int num[10], i, pmin = 0, pmax = 0, max, min;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++) {
    scanf("%d", &num[i]);
  }
  max = FindMax(num, 10, &pmax);
  min = FindMin(num, 10, &pmin);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", max, pmax, min, pmin);
  return 0;
}
int FindMax(int num[], int n, int *pMaxPos) {
  int max = num[0], i;
  for (i = 0; i < 10; i++) {
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  }
  return max;
}
int FindMin(int num[], int n, int *pMinPos) {
  int min = num[0], i;
  for (i = 0; i < 10; i++) {
    if (num[i] < min) {
      min = num[i];
      *pMinPos = i;
    }
  }
  return min;
}

[Answer 8:]

#include <stdio.h>
#define N 10
int FindMax(int num[], int n, int *pMaxPos);
int FindMin(int num[], int n, int *pMinPos);
int main() {
  int num[N];
  int i;
  int pMaxPos, pMinPos;
  int maxnum, minnum;
  printf("Input 10 numbers:\n");
  for (i = 0; i < N; i++) {
    scanf("%d", &num[i]);
  }
  maxnum = FindMax(num, N, &pMaxPos);
  minnum = FindMin(num, N, &pMinPos);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", maxnum, pMaxPos, minnum,
         pMinPos);
  return 0;
}
int FindMax(int num[], int n, int *pMaxPos) {
  int i;
  int maxnum = num[0];
  *pMaxPos = 0;
  for (i = 0; i < n; i++) {
    if (num[i] > maxnum) {
      maxnum = num[i];
      *pMaxPos = i;
    }
  }
  return maxnum;
}
int FindMin(int num[], int n, int *pMinPos) {
  int i;
  int minnum = num[0];
  *pMinPos = 0;
  for (i = 0; i < n; i++) {
    if (num[i] < minnum) {
      minnum = num[i];
      *pMinPos = i;
    }
  }
  return minnum;
}

[Answer 9:]

#include <stdio.h>
int FindMax(int num[], int n, int *pMaxPos);
int FindMin(int num[], int n, int *pMinPos);
int main() {
  int num[10], i;
  int max, min, pMaxPos, pMinPos;
  printf("Input 10 numbers:\n");
  for (i = 0; i < 10; i++)
    scanf("%d", &num[i]);
  max = FindMax(num, 10, &pMaxPos);
  min = FindMin(num, 10, &pMinPos);
  printf("Max=%d,Position=%d,Min=%d,Position=%d\n", max, pMaxPos, min, pMinPos);
  return 0;
}
int FindMax(int num[], int n, int *pMaxPos) {
  int i, max = num[0];
  *pMaxPos = 0;
  for (i = 1; i < 10; i++)
    if (num[i] > max) {
      max = num[i];
      *pMaxPos = i;
    }
  return max;
}
int FindMin(int num[], int n, int *pMinPos) {
  int i, min = num[0];
  *pMinPos = 0;
  for (i = 1; i < 10; i++)
    if (num[i] < min) {
      min = num[i];
      *pMinPos = i;
    }
  return min;
}


[9 answers found]