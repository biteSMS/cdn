[Answer 1:]

#include <stdio.h>
int main(void) {
  int a, b, c, d, e, flag = 1, x = 0, y = 0;
  int stu[5][5], ss[20];
  for (a = 0; a < 5; a++) {
    for (b = 0; b < 5; b++) {
      scanf("%d", &stu[a][b]);
    }
  }

  for (e = 0, a = 0; a < 5; a++) {
    c = 0;
    d = 0;
    for (b = 0; b < 5; b++) {
      c = c + stu[a][b];
      d = d + stu[b][a];
    }
    ss[e] = c;
    e++;
    ss[e] = d;
    e++;
  }
  for (a = 0; a < 5; a++) {
    x += stu[a][a];
    y += stu[4 - a][a];
  }
  ss[e] = x;
  e++;
  ss[e] = y;
  for (a = 0; a <= e; a++) {
    for (b = a + 1; b <= e; b++) {
      if (ss[a] != ss[b])
        flag = 0;
    }
  }

  if (flag == 0)
    printf("It is not a magic square!\n");
  else {
    printf("It is a magic square!\n");
    for (a = 0; a < 5; a++) {
      for (b = 0; b < 5; b++) {
        printf("%4d", stu[a][b]);
      }
      printf("\n");
    }
  }
  return 0;
}

[Answer 2:]

#include <math.h>
#include <stdio.h>
main() {
  int x[5][5];
  int i, j;
  int y[12];
  int sum = 0;
  y[10] = 0;
  y[11] = 0;
  for (i = 0; i < 5; i++)
    for (j = 0; j < 5; j++) {
      scanf("%d", &x[i][j]);
    }
  for (i = 0; i < 5; i++) {
    y[i] = 0;
    for (j = 0; j < 5; j++) {
      y[i] += x[i][j];
    }
  }
  for (j = 0; j < 5; j++) {
    y[j + 5] = 0;
    for (i = 0; i < 5; i++) {
      y[j + 5] += x[i][j];
    }
  }
  for (i = 0; i < 5; i++) {
    for (j = 0; j < 5; j++) {
      if (i == j) {
        y[10] += x[i][j];
      } else
        continue;
    }
  }
  for (i = 0; i < 5; i++) {
    for (j = 0; j < 5; j++) {
      if (i + j == 4) {
        y[11] += x[i][j];
      } else
        continue;
    }
  }

  for (i = 0; i < 11; i++) {
    sum += fabs(y[i] - y[i + 1]);
  }
  if (sum == 0) {
    printf("It is a magic square!\n");
    for (i = 0; i < 5; i++) {
      for (j = 0; j < 5; j++) {
        printf("%4d", x[i][j]);
      }
      printf("\n");
    }
  } else {
    printf("It is not a magic square!\n");
  }
}

[Answer 3:]

#include <stdio.h>
#define N 5
int main(void) {
  int i, j;
  int x[N][N];
  for (i = 0; i <= 4; i++)
    for (j = 0; j <= 4; j++) {
      scanf("%d", &x[i][j]);
    }

  int rowSum[N], colSum[N], diagSum1, diagSum2;
  int flag = 1;
  for (i = 0; i < N; i++) {
    rowSum[i] = 0;
    for (j = 0; j < N; j++) {
      rowSum[i] = rowSum[i] + x[i][j];
    }
  }
  for (j = 0; j < N; j++) {
    colSum[j] = 0;
    for (i = 0; i < N; i++) {
      colSum[j] = colSum[j] + x[i][j];
    }
  }
  diagSum1 = 0;
  for (j = 0; j < N; j++) {
    diagSum1 = diagSum1 + x[j][j];
  }
  diagSum2 = 0;
  for (j = 0; j < N; j++) {
    diagSum2 = diagSum2 + x[j][N - 1 - j];
  }
  if (diagSum1 != diagSum2) {
    flag = 0;
  } else {
    for (i = 0; i < N; i++) {
      if ((rowSum[i] != diagSum1) || (colSum[i] != diagSum1))
        flag = 0;
    }
  }
  if (flag) {
    printf("It is a magic square!\n");
    for (i = 0; i < N; i++) {
      for (j = 0; j < N; j++) {
        printf("%4d", x[i][j]);
      }
      printf("\n");
    }
  } else {
    printf("It is not a magic square!\n");
  }
  return 0;
}


[3 answers found]