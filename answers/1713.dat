[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
#define SIZE sizeof(struct node)
void main() {

  int a[10][10];
  int i, j, n, sum = 0, sum1 = 0, product = 1, h, product1 = 1;
  printf("Input n:");
  scanf("%d", &n);
  printf("Input %d*%d matrix:\n", n, n);
  for (i = 0; i < n; i++)
    for (j = 0; j < n; j++)
      scanf("%d", &a[i][j]);
  if (n % 2 == 0) {
    for (i = 0; i < n; i++) {
      sum = sum + a[i][i];
    }
    for (i = 0; i < n; i++) {
      sum1 = a[i][n - 1 - i] + sum1;
    }
    sum = sum + sum1;
    for (j = 0; j < n; j++) {
      if (j % 2 == 0)
        product = product * a[j][j];
    }
    for (j = 0; j < n; j++) {
      if ((n - 1 - j) % 2 == 0 && j % 2 == 0)

        product1 = product1 * a[j][n - 1 - j];
    }

    product = product * product1;

  } else {
    h = n / 2;
    for (i = 0; i < n; i++)

    {
      sum = sum + a[i][i];
    }

    for (i = 0; i < n; i++) {
      sum1 = a[i][n - 1 - i] + sum1;
    }

    sum = sum + sum1 - a[h][h];

    for (j = 0; j < n; j++) {
      if (j % 2 == 0)
        product = product * a[j][j];
    }
    for (j = 0; j < n; j++) {
      if ((n - 1 - j) % 2 == 0 && j % 2 == 0)

        product1 = product1 * a[j][n - 1 - j];
    }
    if (h % 2 == 0)
      product = product * product1 / a[h][h];

    else
      product = product * product1;
  }

  printf("sum = %d\nproduct = %ld\n", sum, product);
}

[Answer 2:]

#include <stdio.h>
#include <string.h>
#define N 10
int main() {
  printf("Input n:");
  int n, i, j, sum = 0, a;
  long int product = 1;
  scanf("%d", &n);
  int juzhen[N][N];
  printf("Input %d*%d matrix:\n", n, n);
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++)
      scanf("%d", &juzhen[i][j]);
  }
  for (i = 0; i < n; i++) {
    for (j = 0; j < n; j++) {
      if (i + j == n - 1 || i == j) {
        sum = sum + juzhen[i][j];
        if (i % 2 == 0 && j % 2 == 0)
          product = product * juzhen[i][j];
      }
    }
  }
  printf("sum = %d\nproduct = %ld\n", sum, product);
  return 0;
}


[2 answers found]