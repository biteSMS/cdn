[Answer 1:]

#include <stdio.h>
#include <stdlib.h>
int MyStrcmp(char s[], char t[]) {
  int i, k = 0;
  for (i = 0; s[i] != '\0'; i++) {
    if (s[i] > t[i]) {
      k = 1;
      break;
    }
    if (s[i] < t[i]) {
      k = -1;
      break;
    }
  }
  return k;
}
int main() {
  const int n = 100;
  char s[n], t[n];
  int k = 0;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  k = MyStrcmp(s, t);
  if (k > 0)
    printf("string s>string t.\n");
  if (k < 0)
    printf("string s<string t.\n");
  if (k == 0)
    printf("string s=string t.\n");
  return 0;
}

[Answer 2:]

#include <stdio.h>
#define N 80

int MyStrcmp(char s[], char t[]);

int main() {
  char s[N], t[N];

  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);

  if (MyStrcmp(s, t) > 0)
    printf("string s>string t.\n");
  else if (MyStrcmp(s, t) == 0)
    printf("string s=string t.\n");
  else
    printf("string s<string t.\n");

  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; s[i] != '\0' && t[i] != '\0'; i++) {
    if (s[i] - t[i] > 0)
      return 1;
    else if (s[i] - t[i] < 0)
      return -1;
  }
  if (s[i] == '\0' && t[i] == '\0')
    return 0;
  else if (t[i] == '\0')
    return 1;
  else
    return -1;
}

[Answer 3:]

#include <stdio.h>
#define SIZE 80
int MyStrcmp(char s[], char t[]);
int main() {
  char s[SIZE], t[SIZE];
  int diff;
  printf("Input s\n");
  gets(s);
  printf("Input t\n");
  gets(t);
  diff = MyStrcmp(s, t);
  if (diff > 0)
    printf("string s>string t.\n");
  else if (diff < 0)
    printf("string s<string t.\n");
  else
    printf("string s=string t.\n");
  getchar();
  return 0;
}
int MyStrcmp(char s[], char t[]) {
  int i;
  for (i = 0; (s[i] != '\0' && t[i] != '\0'); i++) {
    if (s[i] - t[i] != 0) {
      return s[i] - t[i];
      break;
    }
  }
  if (s[i] == '\0' || t[i] == '\0')
    return 0;
}


[3 answers found]