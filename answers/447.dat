[Answer 1:]

#include <stdio.h>
int f(int);
main() {
  int i, j = 0, k, l, m, n = 0, d = 0;
  int a[2000], c[2000], b[2000];
  printf("There are follwing primes in first row :\n");
  for (i = 0; i < 2000; i++) {
    if (f(i) == 1) {
      a[j] = i;
      j++;
    }
  }
  for (k = 0; k < 2000; k++) {
    c[k] = a[k + 1] - a[k];
  }
  for (l = 1999; l >= 0; l--) {
    for (m = l, n = 0; m < 2000; m++) {
      n = n + c[m];
      if (n == 1898) {
        d++;
        printf("(%d).%3d,......,%d\n", d, a[l], a[m + 1]);
      }
    }
  }
}
int f(int n) {
  int x = 0, a, i;
  for (i = 2; i < n / 2; i++) {
    a = n % i;
    if (a == 0)
      x++;
  }
  if (x == 0)
    return 1;
  else
    return 0;
}

[Answer 2:]


#include <math.h>
#include <stdio.h>
#define NUM 320

/*int a(int i)//ÅĞ¶ÏËØÊı
{
    int j;
    if(i <= 1)
    {
        return 0;
    }
    if(i == 2)
    {
        return 1;
    }
    if(!(i%2))
    {
        return 0;
    }
    for(j = 3;j <= sqrt(i);j+=2)
    {
        if(!(i%j))
        {
            return 0;
        }
    }
    return 1;
}*/

int a(int n) {
  int i;
  for (i = 2; i <= (n - 1) / 2; i++) {
    if (n % i == 0) {
      return 0;
    }
  }
  return 1;
}

int main(void) {
  int i, j, count = 0;
  int number[NUM];
  printf("There are follwing primes in first row :\n");
  for (j = 0, i = 3; i <= 2000; i += 2) {
    if (a(i)) {
      number[j++] = i;
    }
  }
  for (j--; number[j] > 1898; j--) {
    for (i = 0; number[j] - number[i] > 1898; i++) {
      ;
    }
    if (number[j] - number[i] == 1898) {
      printf("(%d).%3d,......,%d\n", ++count, number[i], number[j]);
    }
  }
  return 0;
}


[2 answers found]